{"version":3,"sources":["components/Users.js","components/Profile.js","components/ProfileEdit.js","components/Info.js","components/Message.js","components/Messenger.js","components/LogIn.js","components/Register.js","index.js"],"names":["Users","state","query","results","handleInputChange","_this","setState","search","value","toLowerCase","_this2","this","props","me","react_default","a","createElement","findUser","y","users","find","el","email","extractFragment","data","userEmail","message","id","text","time","seenTime","className","placeholder","ref","input","onChange","style","width","padding","backgroundColor","color","friends_requests","show","map","onClick","display","key","_id","src","photo","alt","username","firstname","lastname","acceptFriendRequest","name","title","role","aria-label","deniedFriendRequest","friends","length","user","includes","removeFriend","sugestions","requests_sent","some","revokeFriendRequest","sendFriendRequest","Component","Profile","showProfile","last_activity","Date","now","toLocaleTimeString","weekday","year","month","day","tel","type","height","borderRadius","defaultValue","updateData","setColor","position","top","filter","em","elem","ProfileEdit","profileChange","inform","Info","Message","scrollUP","nr","setStyle","index","mes","conversation","document","getElementById","setPosition","participants","seen","profile_edit","components_ProfileEdit","components_Info","toLocaleDateString","convertUNIX","React","Messenger","keyEnter","e","charCode","keyCode","sendMessage","editProfile","logout","components_Users","components_Message","info","onKeyDown","components_Profile","LogIn","myEmail","password","tryLogin","changeForm","Register","tryRegister","FrontendApp","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","loadData","console","log","socket","socketIOClient","endpoint","on","sortUsers","messages","sort","b","friend","authorized","axios","get","headers","token","window","localStorage","getItem","hisemail","then","res","catch","err","event","_this$setState","defineProperty","target","favcolor","post","response","error","original_pass","new_pass","rpassword","autentificate","removeItem","initialstate","elmnt","scrollTop","scrollHeight","secretToken","setItem","email_target","confirm","checkToken","loaded","process","PORT","react_router_dom","react_router","to","exact","path","render","components_Messenger","components_LogIn","components_Register","rootElement","ReactDOM","src_FrontendApp"],"mappings":"uNA8NeA,oNA1NbC,MAAQ,CACNC,MAAO,GACPC,QAAS,MAIZC,kBAAoB,WACnBC,EAAKC,SAAS,CACZJ,MAAOG,EAAKE,OAAOC,MAAMC,yFAIlB,IAAAC,EAAAC,KACP,IAAMA,KAAKC,MAAMX,MAAMY,GAErB,OAAMC,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,6BAIZ,IAAIC,EAAW,SAAEC,GACX,GAAIR,EAAKE,MAAMX,MAAMkB,MAGf,OAFYT,EAAKE,MAAMX,MAAMkB,MAAMC,KAAM,SAAAC,GAAE,OAAIA,EAAGC,QAAUJ,KAuBpEK,EAAkB,SAAAD,GAEpB,OAAKZ,EAAKE,MAAMX,MAAMuB,MAClBd,EAAKE,MAAMX,MAAMuB,KAAKJ,KAAK,SAAAC,GAAE,OAAIA,EAAGI,YAAcH,IAE1CZ,EAAKE,MAAMX,MAAMuB,KAAKJ,KAAM,SAAAC,GAAE,OAAIA,EAAGI,YAAcH,IAAQI,QAAQJ,QAAUA,EAExER,EAAAC,EAAAC,cAAA,OAAKW,GAAG,UAAR,QACcjB,EAAKE,MAAMX,MAAMuB,KAAKJ,KAAK,SAAAC,GAAE,OAAIA,EAAGI,YAAcH,IAAOI,QAAQE,MAI9ElB,EAAKE,MAAMX,MAAMuB,KAAKJ,KAAK,SAAAC,GAAE,OAAIA,EAAGI,YAAcH,IAAOI,QAAQG,KACrEnB,EAAKE,MAAMX,MAAMuB,KAAKJ,KAAK,SAAAC,GAAE,OAAIA,EAAGI,YAAcH,IAAOQ,SAEhDhB,EAAAC,EAAAC,cAAA,OAAKW,GAAG,QACZjB,EAAKE,MAAMX,MAAMuB,KAAKJ,KAAK,SAAAC,GAAE,OAAIA,EAAGI,YAAcH,IAAOI,QAAQE,MAI5Dd,EAAAC,EAAAC,cAAA,OAAKW,GAAG,UACdjB,EAAKE,MAAMX,MAAMuB,KAAKJ,KAAK,SAAAC,GAAE,OAAIA,EAAGI,YAAcH,IAAOI,QAAQE,MAQ1E,IAIX,OACEd,EAAAC,EAAAC,cAAA,OAAKe,UAAU,SACbjB,EAAAC,EAAAC,cAAA,SACEgB,YAAY,sCACZC,IAAK,SAAAC,GAAK,OAAIxB,EAAKH,OAAS2B,GAC5BC,SAAUxB,KAAKP,kBACfgC,MAAO,CAACC,MAAO,OAAQC,QAAQ,UAAWC,gBAAiB5B,KAAKC,MAAMX,MAAMY,GAAG2B,MAAM,QAGvF1B,EAAAC,EAAAC,cAAA,OAAKe,UAAU,SAAf,YACEpB,KAAKC,MAAMX,MAAMY,IAAMF,KAAKC,MAAMX,MAAMwC,kBACxC9B,KAAKC,MAAMX,MAAMyC,MACjB/B,KAAKC,MAAMX,MAAMwC,iBAAiBE,IAAI,SAAArB,GACpC,OACER,EAAAC,EAAAC,cAAA,OACEe,UAAU,eACVa,QAAS,kBAAMlC,EAAKE,MAAMiC,QAAQvB,IAClCwB,IAAK7B,EAASK,GAAOyB,KAEpBjC,EAAAC,EAAAC,cAAA,OAAMe,UAAU,SACPjB,EAAAC,EAAAC,cAAA,OAAKgC,IAAK/B,EAASK,GAAO2B,MAAQC,IAAKjC,EAASK,GAAO6B,YAE/DrC,EAAAC,EAAAC,cAAA,OAAMe,UAAU,UACZjB,EAAAC,EAAAC,cAAA,OAAKe,UAAU,aAAad,EAASK,GAAO8B,UAA5C,IAAwDnC,EAASK,GAAO+B,SAAxE,MACAvC,EAAAC,EAAAC,cAAA,OAAMe,UAAU,oBAAhB,KAAwCR,EAAgBD,GAAxD,OAGNR,EAAAC,EAAAC,cAAA,UACMe,UAAU,YACVa,QAAS,kBAAMlC,EAAKE,MAAM0C,oBAAoBhC,IAC9CiC,KAAK,iBACLC,MAAM,6BACNpB,MAAO,CAAEG,gBAAiB7B,EAAKE,MAAMX,MAAMY,GAAG2B,MAAM,OAExD1B,EAAAC,EAAAC,cAAA,QAAMyC,KAAK,MAAMC,aAAW,SAA5B,aAIF5C,EAAAC,EAAAC,cAAA,UACEe,UAAU,YACVa,QAAS,kBAAMlC,EAAKE,MAAM+C,oBAAoBrC,IAC9CiC,KAAK,4BACLC,MAAM,4BACNpB,MAAO,CAAEG,gBAAiB7B,EAAKE,MAAMX,MAAMY,GAAG2B,MAAM,OAEpD1B,EAAAC,EAAAC,cAAA,QAAMyC,KAAK,MAAMC,aAAW,UAA5B,UAPF,QAiBL/C,MAAQA,KAAKC,MAAMX,MAAMkB,OAC1BR,KAAKC,MAAMX,MAAM2D,SACjBjD,KAAKC,MAAMX,MAAM2D,QAAQC,OAAS,EACxBlD,KAAKC,MAAMX,MAAM2D,QAAQjB,IAAM,SAAAmB,GACvB,OAAMA,EAAKV,WAAaU,EAAKV,UAAU3C,cAAcsD,SAAUrD,EAAKT,MAAMC,QACzE4D,EAAKT,UAAYS,EAAKT,SAAS5C,cAAcsD,SAAUrD,EAAKT,MAAMC,OAE3DY,EAAAC,EAAAC,cAAA,OAAMe,WAhHvBT,EAgH2CwC,EAAKxC,MA/GvDZ,GACAA,EAAKE,MAAMX,MAAMuB,MAEjBd,EAAKE,MAAMX,MAAMuB,KAAKJ,KAAK,SAAAC,GAAE,OAAIA,EAAGI,YAAcH,KAElDZ,EAAKE,MAAMX,MAAMuB,KAAKJ,KAAM,SAAAC,GAAE,OAAIA,EAAGI,YAAcH,IAAQI,QAAQJ,QAAUA,GAE3EZ,EAAKE,MAAMX,MAAMuB,KAAKJ,KAAK,SAAAC,GAAE,OAAIA,EAAGI,YAAcH,IAAOI,QAAQG,KACnEnB,EAAKE,MAAMX,MAAMuB,KAAKJ,KAAK,SAAAC,GAAE,OAAIA,EAAGI,YAAcH,IAAOQ,SAEtD,aAEA,QAoGyBc,QAAS,kBAAMlC,EAAKE,MAAMiC,QAAQiB,EAAKxC,QACvCwB,IAAKgB,EAAKf,KAEZjC,EAAAC,EAAAC,cAAA,OAAMe,UAAU,SACNjB,EAAAC,EAAAC,cAAA,OAAKgC,IAAKc,EAAKb,MAAOC,IAAKY,EAAKX,YAExCrC,EAAAC,EAAAC,cAAA,OAAMe,UAAU,UACZjB,EAAAC,EAAAC,cAAA,OAAKe,UAAU,aAAa+B,EAAKV,UAAjC,IAA6CU,EAAKT,SAAlD,KACAvC,EAAAC,EAAAC,cAAA,OAAMe,UAAU,oBAAhB,KAAwCR,EAAgBuC,EAAKxC,OAA7D,OAENR,EAAAC,EAAAC,cAAA,UAAQe,UAAU,YACdyB,MAAM,gBACNZ,QAAS,kBAAMlC,EAAKE,MAAMoD,aAAaF,EAAKxC,QAC5Cc,MAAO,CAAEG,gBAAiB7B,EAAKE,MAAMX,MAAMY,GAAG2B,MAAM,OAEtD1B,EAAAC,EAAAC,cAAA,QAAMyC,KAAK,MAAMC,aAAW,UAA5B,YAKe,KArIpC,IAAApC,IAwINR,EAAAC,EAAAC,cAAA,8CAGLF,EAAAC,EAAAC,cAAA,OAAKe,UAAU,SAAf,cACGpB,MACDA,KAAKC,MAAMX,MAAMgE,YACjBtD,KAAKC,MAAMX,MAAMgE,WAAWtB,IAAK,SAAAmB,GAC/B,OAAIA,EAAKV,UAAU3C,cAAcsD,SAAUrD,EAAKT,MAAMC,QACjD4D,EAAKT,SAAS5C,cAAcsD,SAAUrD,EAAKT,MAAMC,OAGlDY,EAAAC,EAAAC,cAAA,OAAMe,UAAU,OACRa,QAAS,kBAAMlC,EAAKE,MAAMiC,QAAQiB,EAAKxC,QACvCwB,IAAKgB,EAAKf,KAEJjC,EAAAC,EAAAC,cAAA,OAAMe,UAAU,SACRjB,EAAAC,EAAAC,cAAA,OAAKgC,IAAKc,EAAKb,MAAOC,IAAKY,EAAKX,YAExCrC,EAAAC,EAAAC,cAAA,OAAMe,UAAU,UACZjB,EAAAC,EAAAC,cAAA,OAAKe,UAAU,aAAa+B,EAAKV,UAAjC,IAA6CU,EAAKT,SAAlD,KACAvC,EAAAC,EAAAC,cAAA,OAAMe,UAAU,oBAAhB,KAAwCR,EAAgBuC,EAAKxC,OAA7D,OAGDZ,EAAKE,MAAMX,MAAMY,GAAGqD,cACtBC,KAAM,SAAA9C,GAAE,OAAIA,IAAOyC,EAAKxC,QAUvBR,EAAAC,EAAAC,cAAA,UACQe,UAAU,YACVyB,MAAM,4BACNZ,QAAS,kBAAMlC,EAAKE,MAAMwD,oBAAoBN,EAAKxC,QACnDc,MAAO,CAAEG,gBAAiB7B,EAAKE,MAAMX,MAAMY,GAAG2B,MAAM,OAJ5D,KARA1B,EAAAC,EAAAC,cAAA,UACQe,UAAU,YACVyB,MAAM,0BACNZ,QAAS,kBAAMlC,EAAKE,MAAMyD,kBAAkBP,EAAKxC,QACjDc,MAAO,CAAEG,gBAAiB7B,EAAKE,MAAMX,MAAMY,GAAG2B,MAAM,OAJ5D,SAkBN,eAhNN8B,cCoJLC,mLAnJD,IAAAlE,EAAAM,KACJ,IAAKA,KAAKC,MAAMX,MAAMY,GACjB,OACKC,EAAAC,EAAAC,cAAA,UACKF,EAAAC,EAAAC,cAAA,6BAGf,GAAIL,KAAKC,MAAMX,MAAMkB,MAChB,IAAI2C,EAAOnD,KAAKC,MAAMX,MAAMkB,MAAMC,KAAK,SAAAC,GAAE,OAAIA,EAAGC,QAAUjB,EAAKO,MAAMX,MAAM4C,UAsBhF,IANqBX,EAMjBjB,EAAW,SAAAC,GACV,GAAIb,EAAKO,MAAMX,MAAMkB,MAGhB,OAFWd,EAAKO,MAAMX,MAAMkB,MAAMC,KAAK,SAAAC,GAAE,OAAIA,EAAGC,QAAUJ,KAMpE,OACKJ,EAAAC,EAAAC,cAAA,OAAKe,UAAU,WACTpB,KAAKC,MAAMX,MAAMwC,kBAAoB9B,KAAKC,MAAMX,MAAMwC,iBAAiBoB,OAAS,EAC5E/C,EAAAC,EAAAC,cAAA,OAAKe,UAAU,eAAea,QAASjC,KAAKC,MAAM4D,aAC7C1D,EAAAC,EAAAC,cAAA,QAAMyC,KAAK,MAAMC,aAAW,eAAeF,MAAM,gBAAjD,gBADL,YAIe7C,KAAKC,MAAMX,MAAMwC,iBAAiBoB,OAJjD,yBAI8E/C,EAAAC,EAAAC,cAAA,WAJ9E,iBAOD,KACJF,EAAAC,EAAAC,cAAA,OAAKe,UAAU,SAAf,WAEC+B,GAAQA,EAAKW,eAAiBC,KAAKC,MAAQb,EAAKW,cAAgB,KAC5D3D,EAAAC,EAAAC,cAAA,OAAKe,UAAU,iBACVjB,EAAAC,EAAAC,cAAA,QAAMW,GAAG,iBACJb,EAAAC,EAAAC,cAAA,OACKgC,IAAI,kHACJE,IAAI,SACJM,MAAM,YALrB,UAWA1C,EAAAC,EAAAC,cAAA,OAAKe,UAAU,iBAAf,kBAA8CjB,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,SAAI8C,IAvCjD5B,EAuCqE4B,EAAKW,cAtC/E,IAAIC,KAAKxC,GAEiD0C,mBAAmB,QAD1E,CAAEC,QAAS,OAAQC,KAAM,UAAWC,MAAO,OAAQC,IAAK,aAqCT,MAGxDlE,EAAAC,EAAAC,cAAA,OAAKe,UAAU,QACT+B,GAAQA,EAAKV,UADnB,IAC+BU,GAAQA,EAAKT,UAG5CvC,EAAAC,EAAAC,cAAA,OAAKgC,IAAKc,GAAQA,EAAKb,MAAOC,IAAKY,GAAQA,EAAKxC,QAChDR,EAAAC,EAAAC,cAAA,OAAKe,UAAU,OAAf,UAA6B+B,GAAQA,EAAKmB,KAC1CnE,EAAAC,EAAAC,cAAA,OAAKe,UAAU,SAAf,UAA+B+B,GAAQA,EAAKxC,OAE3CX,KAAKC,MAAMX,MAAM4C,UAAYlC,KAAKC,MAAMX,MAAMY,GAAGS,MAC7CR,EAAAC,EAAAC,cAAA,WACKF,EAAAC,EAAAC,cAAA,oDACAF,EAAAC,EAAAC,cAAA,SACKkE,KAAK,QACL9C,MAAO,CAAEC,MAAO,QAAS8C,OAAQ,QAASC,aAAc,MAAOvC,QAAS,UACxEU,KAAK,WACL5B,GAAG,WACH0D,aAAc1E,KAAKC,MAAMX,MAAMuC,MAC/BL,SAAUxB,KAAKC,MAAM0E,aAE1BxE,EAAAC,EAAAC,cAAA,SACKkE,KAAK,SACL1E,MAAM,OACNoC,QAASjC,KAAKC,MAAM2E,SACpBnD,MAAO,CACFG,gBAAiB5B,KAAKC,MAAMX,MAAMY,GAAG2B,MACrCF,QAAS,YACTO,QAAS,SACT2C,SAAU,WACVC,IAAK,WAIrB,KAEJ3E,EAAAC,EAAAC,cAAA,OAAKe,UAAU,eACVjB,EAAAC,EAAAC,cAAA,OAAKe,UAAU,SAAf,kBACC+B,GACIA,EAAKF,SACLE,EAAKF,QACC8B,OAAO,SAAAC,GAAE,OAAIA,IAAOtF,EAAKO,MAAMX,MAAMY,GAAGS,QACxCqB,IAAI,SAAArB,GACA,OACKR,EAAAC,EAAAC,cAAA,OAAKe,UAAU,OAAOa,QAAS,kBAAMvC,EAAKO,MAAMiC,QAAQvB,IAAQwB,IAAK7B,EAASK,GAAOyB,KAChFjC,EAAAC,EAAAC,cAAA,OAAKe,UAAU,SACVjB,EAAAC,EAAAC,cAAA,OAAKe,UAAU,eAAeiB,IAAK/B,EAASK,GAAO2B,MAAOC,IAAKjC,EAASK,GAAO6B,YAEpFrC,EAAAC,EAAAC,cAAA,OAAKe,UAAU,UACVjB,EAAAC,EAAAC,cAAA,OAAKe,UAAU,YAAYK,MAAO,CAAEqD,IAAK,SACnCxE,EAASK,GAAO8B,UADtB,IACkCnC,EAASK,GAAO+B,WAItDhD,EAAKO,MAAMX,MAAMY,GAAGqD,cAAcC,KAAK,SAAA9C,GAAE,OAAIA,IAAOC,KACrDjB,EAAKO,MAAMX,MAAMY,GAAG+C,QAAQO,KAAK,SAAAyB,GAAI,OAAIA,IAAStE,IAC7CR,EAAAC,EAAAC,cAAA,UACKe,UAAU,YACVyB,MAAM,4BACNZ,QAAS,kBAAMvC,EAAKO,MAAMwD,oBAAoB9C,IAC9Cc,MAAO,CAAEG,gBAAiBlC,EAAKO,MAAMX,MAAMY,GAAG2B,MAAQ,OAJ3D,KASA1B,EAAAC,EAAAC,cAAA,UACKe,UAAU,YACVyB,MAAM,0BACNZ,QAAS,kBAAMvC,EAAKO,MAAMyD,kBAAkB/C,IAC5Cc,MAAO,CAAEG,gBAAiBlC,EAAKO,MAAMX,MAAMY,GAAG2B,MAAQ,OAJ3D,oBAlIjC8B,aCoDPuB,EArDK,SAAEjF,GAClB,OACIE,EAAAC,EAAAC,cAAA,OAAKe,UAAU,sBACXjB,EAAAC,EAAAC,cAAA,OAAKW,GAAG,eACNb,EAAAC,EAAAC,cAAA,OAAKe,UAAU,gBACfjB,EAAAC,EAAAC,cAAA,KAAGe,UAAU,cAAb,uBAEIjB,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,SAAOkE,KAAK,OAAOvD,GAAG,YAAYI,UAAU,gBAAgBwB,KAAK,YAAYvB,YAAY,YACvFG,SAAUvB,EAAM0E,WAAYD,aAAczE,EAAMX,MAAMY,GAAGuC,aAE/DtC,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,SAAOkE,KAAK,OAAOvD,GAAG,WAAWI,UAAU,gBAAgBwB,KAAK,WAAWvB,YAAY,WACnFG,SAAUvB,EAAM0E,WAAaD,aAAczE,EAAMX,MAAMY,GAAGwC,aAGpEvC,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,SAAOkE,KAAK,OAAOvD,GAAG,WAAWI,UAAU,gBAAgBwB,KAAK,WAAYvB,YAAY,eACxFG,SAAUvB,EAAM0E,cAEpBxE,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,SAAOkE,KAAK,OAAOvD,GAAG,YAAYI,UAAU,gBAAgBwB,KAAK,YAAavB,YAAY,eACxFG,SAAUvB,EAAM0E,eAG1BxE,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,SAAOkE,KAAK,OAAOvD,GAAG,MAAMI,UAAU,gBAAgBwB,KAAK,MAAMvB,YAAY,QAC7EG,SAAUvB,EAAM0E,WAAaD,aAAczE,EAAMX,MAAMY,GAAGoE,OAE9DnE,EAAAC,EAAAC,cAAA,UACMF,EAAAC,EAAAC,cAAA,SAAOkE,KAAK,OAAOvD,GAAG,QAAQI,UAAU,gBAAgBwB,KAAK,QAAQvB,YAAY,QAC/EG,SAAUvB,EAAM0E,WAAYD,aAAczE,EAAMX,MAAMY,GAAGoC,YAKvEnC,EAAAC,EAAAC,cAAA,SAAOkE,KAAK,SAASnD,UAAU,gBAAgBa,QAAShC,EAAMkF,cAAetF,MAAM,WAtCzF,IAsCsGM,EAAAC,EAAAC,cAAA,WAE7FJ,EAAMX,MAAM8F,OACfjF,EAAAC,EAAAC,cAAA,SAAOW,GAAG,UAAUf,EAAMX,MAAM8F,QAChC,QCvBHC,EAtBF,SAAApF,GACR,OACKE,EAAAC,EAAAC,cAAA,OAAKe,UAAU,sBACVjB,EAAAC,EAAAC,cAAA,OAAKW,GAAG,eACHb,EAAAC,EAAAC,cAAA,OAAKe,UAAU,gBACVjB,EAAAC,EAAAC,cAAA,KAAGe,UAAU,cAAb,UAELjB,EAAAC,EAAAC,cAAA,4DACAF,EAAAC,EAAAC,cAAA,qCAEKF,EAAAC,EAAAC,cAAA,QAAMyC,KAAK,MAAMC,aAAW,SAA5B,iBAIJ9C,EAAMX,MAAM8F,OAASjF,EAAAC,EAAAC,cAAA,SAAOW,GAAG,UAAUf,EAAMX,MAAM8F,QAAkB,KAExEjF,EAAAC,EAAAC,cAAA,OAAKW,GAAG,kBC6JbsE,6MA1KbhG,MAAQ,CACNC,MAAO,GACPC,QAAS,MAMXC,kBAAoB,WAClBC,EAAKC,SAAS,CACZJ,MAAOG,EAAKE,OAAOC,MAAMC,4GAJzBE,KAAKC,MAAMsF,4CAON,IAAAxF,EAAAC,KAgBL,IAAIwF,EAAK,EACJC,EAAS,SAAEC,EAAOC,GA2BpB,IAxBSD,EAAQ,GAAKC,EAAIhF,QAAUZ,EAAKE,MAAMX,MAAMsG,aAAcF,EAAQ,GAAI/E,OAC1E+E,EAAQ,GAAOC,EAAIzE,KAAMnB,EAAKE,MAAMX,MAAMsG,aAAaF,EAAM,GAAGxE,KAAO,QAEvEsE,EAAK,GAGLE,EAAQ,GAAW,IAANF,GAAYK,SAASC,eAAgBJ,KAIrDG,SAASC,eAAgBJ,EAAOF,GAAKpE,UAAW,iBAChDyE,SAASC,eAAgBJ,GAAStE,UAAW,oBAE1CsE,EAAQ,GAAKF,EAAK,GAAMK,SAASC,eAAgBJ,KAKpDG,SAASC,eAAgBJ,EAAO,GAAItE,UAAW,qBAE/CyE,SAASC,eAAgBJ,GAAQtE,UAAW,mBAC5CyE,SAASC,eAAgBJ,EAAQF,GAAKpE,UAAW,kBAElDoE,IACGG,EAAIhF,QAAUZ,EAAKE,MAAMX,MAAMY,GAAGS,MACvC,MACE,CAAEiB,gBAAiB7B,EAAKE,MAAMX,MAAMY,GAAG2B,MAAM,OAU7CkE,EAAa,SAAEpF,EAAO+E,GAExB,OAAK3F,EAAKE,MAAMX,MAAMY,GAAGS,QAAUA,GACvB+E,EAAQ,GAAe3F,EAAKE,MAAMX,MAAMsG,aAAcF,EAAQ,GAAI/E,MAC/D,oBAIP+E,EAAQ,GAAe3F,EAAKE,MAAMX,MAAMsG,aAAcF,EAAQ,GAAI/E,MAC/D,qBAMf,GAAIX,MAA2C,OAAlCA,KAAKC,MAAMX,MAAM0G,cAA0BhG,KAAKC,MAAMX,MAAM0G,aACrE,IAAI7E,EAAWnB,KAAKC,MAAMX,MAAM0G,aAAa,IAC7ChG,KAAKC,MAAMX,MAAM0G,aAAavF,KAAM,SAAAC,GAAE,OAAIA,EAAGC,QAAUZ,EAAKE,MAAMX,MAAMY,GAAGS,QAAQsF,UAIlF9E,EAAW,KAGhB,OAAInB,KAAKC,MAAMX,MAAM4G,aAEnB/F,EAAAC,EAAAC,cAAA,OAAKe,UAAU,gBACTjB,EAAAC,EAAAC,cAAC8F,EAAD,CACG7G,MAAOU,KAAKC,MAAMX,MAClBqF,WAAY3E,KAAKC,MAAM0E,WACvBQ,cAAenF,KAAKC,MAAMkF,iBAK/BnF,OAASA,KAAKC,MAAMX,MAAMsG,aAE9BzF,EAAAC,EAAAC,cAAA,OAAKe,UAAU,gBACTjB,EAAAC,EAAAC,cAAC+F,EAAD,CAAO9G,MAAOU,KAAKC,MAAMX,SAS/Ba,EAAAC,EAAAC,cAAA,OAAKW,GAAG,gBAENb,EAAAC,EAAAC,cAAA,SACEgB,YAAY,yCACZC,IAAK,SAAAC,GAAK,OAAIxB,EAAKH,OAAS2B,GAC5BC,SAAUxB,KAAKP,kBACfgC,MAAO,CAACC,MAAO,OAAQC,QAAQ,WAAYC,gBAAiB5B,KAAKC,MAAMX,MAAMY,GAAG2B,MAAM,QAEpF1B,EAAAC,EAAAC,cAAA,OAAKe,UAAU,SAAf,iBACJjB,EAAAC,EAAAC,cAAA,OAAKW,GAAG,gBAEJhB,KAAKC,MAAMX,MAAMsG,cAClB5F,KAAKC,MAAMX,MAAMsG,aAAa5D,IAAI,SAAC2D,EAAKD,GACvC,OAAIC,EAAI1E,KAAKnB,cAAcsD,SAAUrD,EAAKT,MAAMC,OAIpCY,EAAAC,EAAAC,cAAA,OAAK8B,IAAKuD,EAAO1E,GAAG,UACnBI,UAAY2E,EAAaJ,EAAIhF,MAAO+E,IAStDA,EAAQ,GAAOC,EAAIzE,KAAMnB,EAAKE,MAAMX,MAAMsG,aAAaF,EAAM,GAAGxE,KAAO,MACjE,IAAVwE,EACAvF,EAAAC,EAAAC,cAAA,OAAKe,UAAU,aAAf,KA7HyBG,EA6HoBoE,EAAIzE,KA3HnC,IAAI6C,KAAKxC,GAGR8E,mBAAmB,QAFjB,CAAEnC,QAAS,OAAQC,KAAM,UAAWC,MAAO,OAAQC,IAAK,cA2HzE,KAC6BlE,EAAAC,EAAAC,cAAA,QAAMe,UAAU,cAAeK,MAAQgE,EAAUC,EAAOC,GACzD3E,GAAI0E,GADH,IACeC,EAAI1E,KADnB,KAGC0E,EAAIhF,QAAUZ,EAAKE,MAAMX,MAAMY,GAAGS,MACjCgF,EAAIzE,MAAQC,EACdhB,EAAAC,EAAAC,cAAA,QAAMyC,KAAK,MAAM1B,UAAU,SAAS2B,aAAW,eAAeF,MAAM,iBAApE,WACC1C,EAAAC,EAAAC,cAAA,OAAKgC,IAAI,yEACZE,IAAI,OAAOM,MAAM,eAAenB,MAAM,OACtC,KAEAvB,EAAAC,EAAAC,cAAA,QAAMe,UAAU,gBAAhB,IA9I1B,SAAqBG,GAEnB,OADW,IAAIwC,KAAKxC,GACR0C,qBA4I8CqC,CAAYX,EAAIzE,QAGvD,KA5IrB,IAAwBK,aArBNgF,IAAM5C,WCoHb6C,6MAlHVC,SAAW,SAAAC,GAEa,KAAfA,EAAEC,UAAiC,KAAdD,EAAEE,SACtBlH,EAAKO,MAAM4G,uFAIZ,IAAA9G,EAAAC,KACJ,OACKG,EAAAC,EAAAC,cAAA,OAAKW,GAAG,SACHb,EAAAC,EAAAC,cAAA,OAAKe,UAAU,OAAOK,MAAO,CAAEG,gBAAiB5B,KAAKC,MAAMX,MAAMY,GAAG2B,QAC/D1B,EAAAC,EAAAC,cAAA,SAAOe,UAAU,cACZjB,EAAAC,EAAAC,cAAA,aACKF,EAAAC,EAAAC,cAAA,UACKF,EAAAC,EAAAC,cAAA,UACKF,EAAAC,EAAAC,cAAA,QACKyC,KAAK,MACLC,aAAW,OACXF,MAAM,oBACN7B,GAAG,eACHiB,QAASjC,KAAKC,MAAM6G,aALzB,WAUL3G,EAAAC,EAAAC,cAAA,UACKF,EAAAC,EAAAC,cAAA,QAAMyC,KAAK,MAAMC,aAAW,UAAUF,MAAM,UAAU7B,GAAG,UAAUiB,QAASjC,KAAKC,MAAM4D,aACjF,IADN,iCAGK1D,EAAAC,EAAAC,cAAA,QAAMW,GAAG,UAAU6B,MAAM,oBACnB7C,KAAKC,MAAMX,MAAMY,IAAMF,KAAKC,MAAMX,MAAMY,GAAG4B,iBACvC9B,KAAKC,MAAMX,MAAMY,GAAG4B,iBAAiBoB,OAErC/C,EAAAC,EAAAC,cAAA,oBAKpBF,EAAAC,EAAAC,cAAA,UACKF,EAAAC,EAAAC,cAAA,UAAQW,GAAG,SAASiB,QAASjC,KAAKC,MAAM8G,QAAxC,gBAQzB5G,EAAAC,EAAAC,cAAA,OAAKe,UAAU,OACVjB,EAAAC,EAAAC,cAAA,OAAKe,UAAU,QACVjB,EAAAC,EAAAC,cAAC2G,EAAD,CACK9E,QAASlC,KAAKC,MAAMiC,QACpB5C,MAAOU,KAAKC,MAAMX,MAClBoE,kBAAmB1D,KAAKC,MAAMyD,kBAC9BD,oBAAqBzD,KAAKC,MAAMwD,oBAChCT,oBAAqBhD,KAAKC,MAAM+C,oBAChCL,oBAAqB3C,KAAKC,MAAM0C,oBAChCU,aAAcrD,KAAKC,MAAMoD,gBAGnClD,EAAAC,EAAAC,cAAA,OAAKe,UAAU,SAASJ,GAAG,UACtBb,EAAAC,EAAAC,cAAC4G,EAAD,CACK3H,MAAOU,MAAQA,KAAKC,MAAMX,MAC1BqF,WAAY3E,KAAKC,MAAM0E,WACvBY,SAAUvF,KAAKC,MAAMsF,SACrBJ,cAAenF,KAAKC,MAAMkF,gBAK/BnF,KAAKC,MAAMX,MAAMY,IACjBF,KAAKC,MAAMX,MAAMY,GAAG+C,SACpBjD,KAAKC,MAAMX,MAAMY,GAAG+C,QAAQO,KAAK,SAAA9C,GAAE,OAAIA,IAAOX,EAAKE,MAAMX,MAAM4C,UAC1D/B,EAAAC,EAAAC,cAAA,OAAKW,GAAG,eAAeS,MAAO,CAAEG,gBAAiB5B,KAAKC,MAAMX,MAAMY,GAAG2B,MAAQ,OACvE7B,KAAKC,MAAMX,MAAM4H,KAAO/G,EAAAC,EAAAC,cAAA,SAAOW,GAAG,UAAUhB,KAAKC,MAAMX,MAAM4H,MAAgB,KAE9E/G,EAAAC,EAAAC,cAAA,SACKkE,KAAK,OACLlD,YAAY,eACZG,SAAUxB,KAAKC,MAAM0E,WACrB3D,GAAG,UACH4B,KAAK,UACL/C,MAAOG,KAAKC,MAAMX,MAAMyB,QACxBoG,UAAWnH,KAAKyG,WAGrBtG,EAAAC,EAAAC,cAAA,YACKF,EAAAC,EAAAC,cAAA,SACKkE,KAAK,SACL9C,MAAO,CAAEG,gBAAiB5B,KAAKC,MAAMX,MAAMY,GAAG2B,OAC9Cb,GAAG,iBACHnB,MAAM,OACNoC,QAASjC,KAAKC,MAAM4G,gBAIpC,MAET1G,EAAAC,EAAAC,cAAA,OAAKe,UAAU,SACVjB,EAAAC,EAAAC,cAAC+G,EAAD,CACK9H,MAAOU,KAAKC,MAAMX,MAClBuE,YAAa7D,KAAKC,MAAM4D,YACxB3B,QAASlC,KAAKC,MAAMiC,QACpB0C,SAAU5E,KAAKC,MAAM2E,SACrBD,WAAY3E,KAAKC,MAAM0E,WACvBjB,kBAAmB1D,KAAKC,MAAMyD,kBAC9BD,oBAAqBzD,KAAKC,MAAMwD,gCA1G3CE,aCsBT0D,EA1BD,SAACpH,GAEX,OACIE,EAAAC,EAAAC,cAAA,OAAKe,UAAU,sBACXjB,EAAAC,EAAAC,cAAA,OAAKW,GAAG,eACAb,EAAAC,EAAAC,cAAA,OAAKe,UAAU,gBACTjB,EAAAC,EAAAC,cAAA,KAAGe,UAAU,cAAb,WAENjB,EAAAC,EAAAC,cAAA,SAAOkE,KAAK,OAAOvD,GAAG,UAAUI,UAAU,gBAAgBwB,KAAK,QAAQvB,YAAY,QAC3EG,SAAUvB,EAAM0E,WAAY9E,MAAOI,EAAMqH,UACjDnH,EAAAC,EAAAC,cAAA,SAAOkE,KAAK,OAAOvD,GAAG,WAAWI,UAAU,eAAewB,KAAK,WAAWvB,YAAY,WAC9EG,SAAUvB,EAAM0E,WAAY9E,MAAOI,EAAMsH,WACjDpH,EAAAC,EAAAC,cAAA,SAAOkE,KAAK,SAASnD,UAAU,gBAAgBvB,MAAM,SAASoC,QAAShC,EAAMuH,WARrF,MAQoGrH,EAAAC,EAAAC,cAAA,WAC1FJ,EAAMX,MAAM8F,OACdjF,EAAAC,EAAAC,cAAA,SAAQW,GAAG,UAAUf,EAAMX,MAAM8F,QAC/B,KAENjF,EAAAC,EAAAC,cAAA,OAAKW,GAAG,cACAb,EAAAC,EAAAC,cAAA,KAAGe,UAAU,iBAAkBa,QAAShC,EAAMwH,YAA9C,2BAAkFtH,EAAAC,EAAAC,cAAA,2BC8F3FqH,EA/GE,SAAAzH,GACZ,OACKE,EAAAC,EAAAC,cAAA,OAAKe,UAAU,sBACVjB,EAAAC,EAAAC,cAAA,OAAKW,GAAG,eACHb,EAAAC,EAAAC,cAAA,OAAKe,UAAU,gBACVjB,EAAAC,EAAAC,cAAA,KAAGe,UAAU,cAAb,cAELjB,EAAAC,EAAAC,cAAA,aACKF,EAAAC,EAAAC,cAAA,aACKF,EAAAC,EAAAC,cAAA,UACKF,EAAAC,EAAAC,cAAA,UACKF,EAAAC,EAAAC,cAAA,SACKkE,KAAK,OACLvD,GAAG,WACHI,UAAU,gBACVwB,KAAK,WACLvB,YAAY,WACZG,SAAUvB,EAAM0E,cAG1BxE,EAAAC,EAAAC,cAAA,UACKF,EAAAC,EAAAC,cAAA,SACKkE,KAAK,OACLvD,GAAG,QACHI,UAAU,gBACVwB,KAAK,QACLvB,YAAY,QACZG,SAAUvB,EAAM0E,eAI/BxE,EAAAC,EAAAC,cAAA,UACKF,EAAAC,EAAAC,cAAA,UACKF,EAAAC,EAAAC,cAAA,SACKkE,KAAK,OACLvD,GAAG,YACHI,UAAU,gBACVwB,KAAK,YACLvB,YAAY,YACZG,SAAUvB,EAAM0E,cAG1BxE,EAAAC,EAAAC,cAAA,UACKF,EAAAC,EAAAC,cAAA,SACKkE,KAAK,OACLvD,GAAG,WACHI,UAAU,gBACVwB,KAAK,WACLvB,YAAY,WACZG,SAAUvB,EAAM0E,eAI/BxE,EAAAC,EAAAC,cAAA,UACKF,EAAAC,EAAAC,cAAA,UACKF,EAAAC,EAAAC,cAAA,SACKkE,KAAK,OACLvD,GAAG,WACHI,UAAU,gBACVwB,KAAK,WACLvB,YAAY,WACZG,SAAUvB,EAAM0E,cAG1BxE,EAAAC,EAAAC,cAAA,UACKF,EAAAC,EAAAC,cAAA,SACKkE,KAAK,OACLvD,GAAG,YACHI,UAAU,gBACVwB,KAAK,YACLvB,YAAY,kBACZG,SAAUvB,EAAM0E,eAI/BxE,EAAAC,EAAAC,cAAA,UACKF,EAAAC,EAAAC,cAAA,UACKF,EAAAC,EAAAC,cAAA,SACKkE,KAAK,OACLvD,GAAG,MACHI,UAAU,gBACVwB,KAAK,MACLvB,YAAY,QACZG,SAAUvB,EAAM0E,cAG1BxE,EAAAC,EAAAC,cAAA,UACKF,EAAAC,EAAAC,cAAA,SACKkE,KAAK,OACLvD,GAAG,QACHI,UAAU,gBACVwB,KAAK,QACLvB,YAAY,QACZG,SAAUvB,EAAM0E,iBAMzCxE,EAAAC,EAAAC,cAAA,SAAOkE,KAAK,SAASnD,UAAU,gBAAgBa,QAAShC,EAAM0H,YAAa9H,MAAM,aAhGtF,IAgGoGM,EAAAC,EAAAC,cAAA,WAC9FJ,EAAMX,MAAM8F,OAASjF,EAAAC,EAAAC,cAAA,SAAOW,GAAG,UAAUf,EAAMX,MAAM8F,QAAkB,KACxEjF,EAAAC,EAAAC,cAAA,OAAKW,GAAG,cACHb,EAAAC,EAAAC,cAAA,KAAGe,UAAU,iBAAiBa,QAAShC,EAAMwH,YAA7C,uBACyBtH,EAAAC,EAAAC,cAAA,mBAAc,0CC/F1DuH,cACD,SAAAA,IAAc,IAAAlI,EAAA,OAAAmI,OAAAC,EAAA,EAAAD,CAAA7H,KAAA4H,IACTlI,EAAAmI,OAAAE,EAAA,EAAAF,CAAA7H,KAAA6H,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAAjI,QAsCLkI,SAAW,SAAAZ,GACNa,QAAQC,IAAI,yBAEZ,IAAMC,EAASC,IAAe5I,EAAKJ,MAAMiJ,UAEzCF,EAAOG,GAAG,WAAY,SAAAhI,GACf2H,QAAQC,IAAI,qCAAsC5H,GACpDd,EAAK+I,UAAUjI,EAAO8G,KAE3Be,EAAOG,GAAG,cAAgBlB,EAAS,SAAAzG,GAAI,OAClCnB,EAAKC,SAAU,CAAEkB,WAEtBwH,EAAOG,GAAG,kBAAoBlB,EAAS,SAAAzG,GAAI,OACtCnB,EAAKC,SACA,CAAEiG,aAAc/E,EAAK6H,SAAU1C,aAAcnF,EAAKmF,kBArDnDtG,EA2Dd+I,UAAY,SAACjI,EAAO8G,GAMf,GAJKA,IACAA,EAAU5H,EAAKJ,MAAMgI,SAGtB9G,EACC,IAAIN,EAAKM,EAAMC,KAAK,SAAAC,GAAE,OAAIA,EAAGC,QAAU2G,IACnChE,EACCpD,GACAM,EACMuE,OAAO,SAAA5B,GAAI,OAAIA,EAAKxC,QAAUT,EAAGS,QACjCoE,OAAO,SAAArE,GAAE,OAAIA,EAAGC,QAAUT,EAAG+C,QAAQxC,KAAK,SAAAE,GAAK,OAAIA,IAAUD,EAAGC,UAChEoE,OACI,SAAAE,GAAI,OACCA,EAAKtE,QACLT,EAAG4B,iBAAiBrB,KAAK,SAAAE,GAAK,OAAIA,IAAUsE,EAAKtE,UAE1DgI,KAAK,SAACvI,EAAGwI,GACL,OAAIxI,EAAE0D,cAAgB8E,EAAE9E,eACX,EACF1D,EAAE0D,cAAgB8E,EAAE9E,cACnB,EAEL,IAElBb,EACC/C,GACAM,EACMuE,OACI,SAAA8D,GAAM,OACDA,EAAOlI,QAAUT,EAAG+C,QAAQxC,KAAK,SAAAE,GAAK,OAAIA,IAAUkI,EAAOlI,UAEpEgI,KAAK,SAACvI,EAAGwI,GACL,OAAIxI,EAAE0D,cAAgB8E,EAAE9E,eACX,EACF1D,EAAE0D,cAAgB8E,EAAE9E,cACnB,EAEL,IAI3BpE,EAAKC,SAAS,CACTa,QACAN,KACAoD,aACAL,UACAnB,iBAAkB5B,EAAG4B,iBACrByB,cAAerD,EAAGqD,cAClBuF,YAAY,IAGU,KAAvBpJ,EAAKJ,MAAM4C,SAAkBe,EAAQC,OAAS,EAC7CxD,EAAKwC,QAAQe,EAAQ,GAAGtC,OACK,KAAvBjB,EAAKJ,MAAM4C,SAAqC,IAAnBe,EAAQC,QAC3CxD,EAAKwC,QAAQxC,EAAKJ,MAAMgE,WAAW,GAAG3C,QAnHlCjB,EAuHdwC,QAAU,SAAAvB,GAGDjB,EAAKJ,MAAM4G,cACVxG,EAAKC,SAAS,CAAEuG,cAAc,EAAOd,OAAQ,KAElD2D,IAAMC,IAAI,qCAAsC,CAC3CC,QAAS,CACJC,MAAOC,OAAOC,aAAaC,QAAQ,SACnCC,SAAU3I,KAGd4I,KAAK,SAAAC,GACD,GAAsB,OAAlBA,EAAI3I,KAAKA,KAERnB,EAAKC,SAAS,CACTuC,QAASvB,EACTyE,OAAQ,SAIX,CACF,IAAIQ,EAAe,CACd,CACK3E,KAAM,sDACNN,MAAOjB,EAAKJ,MAAMY,GAAGS,MACrBO,KAAM6C,KAAKC,QAGrBtE,EAAKC,SAAS,CACTuC,QAASvB,EACTiF,aAAcA,EACdI,aAAc,GACdZ,OAAQ,QAItBqE,MAAM,SAAAC,GACFvB,QAAQC,IAAI,uCAAwCsB,GAEpDhK,EAAKC,SAAS,CACTuC,QAASvB,EAGTyE,OAAQ,OAIvB1F,EAAK6F,YAvKI7F,EA0KdiF,WAAa,SAAAgF,GAAS,IAAAC,EAEjBlK,EAAKC,UAALiK,EAAA,GAAA/B,OAAAgC,EAAA,EAAAhC,CAAA+B,EACMD,EAAMG,OAAO9I,GAAK2I,EAAMG,OAAOjK,OADrCgI,OAAAgC,EAAA,EAAAhC,CAAA+B,EAAA,SAEa,IAFb/B,OAAAgC,EAAA,EAAAhC,CAAA+B,EAAA,OAGW,IAHXA,KA5KSlK,EAmLdkF,SAAW,WAEN,GAAIlF,EAAKJ,MAAMuC,MACV,IAAIA,EAAQnC,EAAKJ,MAAMyK,cAEvBlI,EAAQnC,EAAKJ,MAAMY,GAAG2B,MAE3BkH,IAAMiB,KAAK,2CAA4C,CAClDd,MAAOC,OAAOC,aAAaC,QAAQ,SACnCxH,MAAOA,IAEN0H,KAAK,SAAAU,GACDvK,EAAKwI,WAGDxI,EAAKJ,MAAMY,GAAGS,OACbjB,EAAKC,SAAS,CACTyF,OAAQ6E,EAASpJ,KAAKuE,OACtBlD,QAASxC,EAAKJ,MAAMY,GAAGS,MACvBkB,MAAOnC,EAAKJ,MAAMyK,aAIhCN,MAAM,SAAAS,GACF/B,QAAQC,IAAI8B,EAAO,yBA3MpBxK,EA8MdyF,cAAgB,WAEX,GAAIzF,EAAKJ,MAAMmD,UACV,IAAIA,EAAY/C,EAAKJ,MAAMmD,eAE3BA,EAAY/C,EAAKJ,MAAMY,GAAGuC,UAE/B,GAAI/C,EAAKJ,MAAMoD,SACV,IAAIA,EAAWhD,EAAKJ,MAAMoD,cAE1BA,EAAWhD,EAAKJ,MAAMY,GAAGwC,SAE9B,GAAIhD,EAAKJ,MAAMgF,IACV,IAAIA,EAAM5E,EAAKJ,MAAMgF,SAErBA,EAAM5E,EAAKJ,MAAMY,GAAGoE,IAEzB,GAAI5E,EAAKJ,MAAMgD,MACV,IAAIA,EAAQ5C,EAAKJ,MAAMgD,WAEvBA,EAAQ5C,EAAKJ,MAAMY,GAAGoC,MAE3B,GAAI5C,EAAKJ,MAAMuC,MACV,IAAIA,EAAQnC,EAAKJ,MAAMuC,WAEvBA,EAAQnC,EAAKJ,MAAMY,GAAG2B,MAE3BkH,IAAMiB,KAAK,sCAAuC,CAC7Cd,MAAOC,OAAOC,aAAaC,QAAQ,SACnC5G,UAAWA,EACXC,SAAUA,EACVyH,cAAezK,EAAKJ,MAAMiI,SAC1B6C,SAAU1K,EAAKJ,MAAM+K,UACrB/F,IAAKA,EACLhC,MAAOA,EACPT,MAAOA,IAEN0H,KAAK,SAAAU,GAGGvK,EAAKJ,MAAMY,GAAGS,OACbjB,EAAKC,SAAS,CACTyF,OAAQ6E,EAASpJ,KAAKuE,OACtBlD,QAASxC,EAAKJ,MAAMY,GAAGS,UAIrC8I,MAAM,SAAAS,GACF/B,QAAQC,IAAI8B,EAAO,SACnBxK,EAAKC,SAAS,CAAEyF,OAAQ,kCA/PzB1F,EAmQd+H,WAAa,WAER/H,EAAKC,SAAS,CAAE2K,eAAgB5K,EAAKJ,MAAMgL,iBArQlC5K,EAwQdqH,OAAS,WACJoC,OAAOC,aAAamB,WAAW,SAC/B7K,EAAKC,SAASD,EAAK8K,eA1QV9K,EA6Qd6F,SAAW,WAEN,IAAIkF,EAAQ5E,SAASC,eAAe,gBACtB,OAAV2E,IACCA,EAAMC,UAAYD,EAAME,eAjRpBjL,EAoRdmE,YAAc,WAETnE,EAAKC,SAAS,CACToC,MAAOrC,EAAKJ,MAAMyC,KAClBG,QAASxC,EAAKJ,MAAMY,GAAGS,SAxRnBjB,EA2RdoH,YAAc,WAETpH,EAAKC,SAAS,CACTuG,cAAexG,EAAKJ,MAAM4G,aAC1BhE,QAASxC,EAAKJ,MAAMY,GAAGS,MACvByE,OAAQ,0EAhSJ1F,EAoSdmH,YAAc,WAGkB,KAAvBnH,EAAKJ,MAAMyB,UACXrB,EAAKJ,MAAMyB,QAAQmC,OAAS,IAC3BxD,EAAKC,SAAS,CACTuH,KAAM,kDAKhB6B,IAAMiB,KAAK,mCAAoC,CAC1Cd,MAAOC,OAAOC,aAAaC,QAAQ,SACnCC,SAAU5J,EAAKJ,MAAM4C,QACrBnB,QAASrB,EAAKJ,MAAMyB,UAEnBwI,KAAK,SAAAC,GAGD9J,EAAKC,SAAS,CAAEoB,QAAS,GAAImG,KAAM,KACnCxH,EAAK6F,aAETkE,MAAM,SAAAC,GACFvB,QAAQC,IAAIsB,GACZhK,EAAKC,SAAS,CACToB,QAAS,GACTmG,KAAM,mDAGrBxH,EAAK6F,cAjUI7F,EAmUdiI,YAAc,WACLjI,EAAKJ,MAAM+K,YAAc3K,EAAKJ,MAAMiI,SAIxCwB,IAAMiB,KAAK,iCAAkC,CACxCxH,SAAU9C,EAAKJ,MAAMkD,SACrB7B,MAAOjB,EAAKJ,MAAMqB,MAClB8B,UAAW/C,EAAKJ,MAAMmD,UACtBC,SAAUhD,EAAKJ,MAAMoD,SACrB6E,SAAU7H,EAAKJ,MAAMiI,SACrBjD,IAAK5E,EAAKJ,MAAMgF,IAChBhC,MAAO5C,EAAKJ,MAAMgD,QAEjBiH,KAAK,SAAAU,GACD9B,QAAQC,IAAI6B,GACZvK,EAAKC,SAAS,CAAEyF,OAAQ6E,EAASpJ,KAAKuE,WAE1CqE,MAAM,SAAAC,GACFhK,EAAKC,SAAS,CAAEyF,OAAQsE,EAAIO,SAASpJ,KAAKuE,SAC1C+C,QAAQC,IAAIsB,KAlBjBhK,EAAKC,SAAS,CAAEyF,OAAQ,4BArUpB1F,EA2Vd8H,SAAW,WACNuB,IAAMiB,KAAK,8BAA+B,CACrCrJ,MAAOjB,EAAKJ,MAAMgI,QAClBC,SAAU7H,EAAKJ,MAAMiI,WAEpBgC,KAAK,SAAAU,GACGA,EAASpJ,KAAKqI,OAASxJ,EAAKJ,MAAMgI,UAAY2C,EAASpJ,KAAKyG,SAC3D5H,EAAKkL,YAAcX,EAASpJ,KAAKqI,MACjCC,OAAOC,aAAayB,QAAQ,QAASZ,EAASpJ,KAAKqI,OAEnDxJ,EAAKC,SAAS,CACTmJ,YAAY,EACZ1D,OAAQ6E,EAASpJ,KAAKuE,SAG3B1F,EAAKwI,SAAS+B,EAASpJ,KAAKyG,UAE5B5H,EAAKC,SAAS,CAAEyF,OAAQ6E,EAASpJ,KAAKuE,WAG/CqE,MAAM,SAAAC,GACFhK,EAAKC,SAAS,CAAEyF,OAAQ,uBACxB+C,QAAQC,IAAIsB,MAjXbhK,EAqXdgE,kBAAoB,SAAA/C,GACfoI,IAAMiB,KAAK,0CAA2C,CACjDd,MAAOC,OAAOC,aAAaC,QAAQ,SACnCyB,aAAcnK,IAEb4I,KAAK,SAAAU,MAGLR,MAAM,SAAAS,GACF/B,QAAQC,IAAI8B,EAAO,yBA9XpBxK,EAiYd+D,oBAAsB,SAAA9C,GACjBoI,IAAMiB,KAAK,4CAA6C,CACnDd,MAAOC,OAAOC,aAAaC,QAAQ,SACnCyB,aAAcnK,IAEb4I,KAAK,SAAAU,MAGLR,MAAM,SAAAS,GACF/B,QAAQC,IAAI8B,EAAO,yBA1YpBxK,EA6YdsD,oBAAsB,SAAArC,GACjBoI,IAAMiB,KAAK,4CAA6C,CACnDd,MAAOC,OAAOC,aAAaC,QAAQ,SACnCyB,aAAcnK,IAEb4I,KAAK,SAAAU,MAILR,MAAM,SAAAS,GACF/B,QAAQC,IAAI8B,EAAO,yBAvZpBxK,EA0ZdiD,oBAAsB,SAAAhC,GACjBoI,IAAMiB,KAAK,4CAA6C,CACnDd,MAAOC,OAAOC,aAAaC,QAAQ,SACnCyB,aAAcnK,IAEb4I,KAAK,SAAAU,MAILR,MAAM,SAAAS,GACF/B,QAAQC,IAAI8B,EAAO,yBApapBxK,EAwad2D,aAAe,SAAA1C,GACSwI,OAAO4B,QACrB,oEAGAhC,IAAMiB,KAAK,qCAAsC,CAC5Cd,MAAOC,OAAOC,aAAaC,QAAQ,SACnCyB,aAAcnK,IAEb4I,KAAK,SAAAU,MAGLR,MAAM,SAAAS,GACF/B,QAAQC,IAAI8B,EAAO,yBArbzBxK,EA2bdsL,WAAa,SAAA9B,GACHA,IACAA,EAAQC,OAAOC,aAAaC,QAAQ,UAGzCN,IAAMiB,KAAK,mCAAoC,CAC1Cd,MAAOA,IAENK,KAAK,SAAAU,GAGDvK,EAAKC,SAAS,CACTmJ,WAAYmB,EAASpJ,KAAKiI,WAC1BxB,QAAS2C,EAASpJ,KAAKyG,QACvB2D,QAAQ,IAGbvL,EAAKwI,SAAS+B,EAASpJ,KAAKyG,WAGhCmC,MAAM,SAAAS,GACF/B,QAAQC,IAAI8B,EAAO,qBA7c7BxK,EAAK8K,aAAe,CACfhI,SAAU,GACV7B,MAAO,GACP8B,UAAW,GACXC,SAAU,GACV6E,SAAU,GACV8C,UAAW,GACX/F,IAAK,GACLhC,MAAO,GACPvB,QAAS,GACTqE,OAAQ,GACR8B,KAAM,GACNI,QAAS,GACTpH,GAAI,GACJ2B,MAAO,UACPrB,MAAO,GACP8J,eAAe,EACfxB,YAAY,EACZ5G,QAAS,GACT0D,aAAc,GACd9D,iBAAkB,GAClByB,cAAe,GACfN,QAAS,GACTK,WAAY,GACZ0C,aAAc,GACdjE,MAAM,EACNmE,cAAc,EACdrF,KAAM,GACNoK,QAAQ,EACRhB,UAAU,EACV1B,SAAU2C,8CAAYC,MAAQ,yBAGnCzL,EAAKJ,MAAQI,EAAK8K,aApCT9K,mFAqdLyJ,OAAOC,aAAaC,QAAQ,UAAwC,IAA5BrJ,KAAKV,MAAMkB,MAAM0C,QACxDlD,KAAKgL,8CAIN,IAAAjL,EAAAC,KACJ,OACKG,EAAAC,EAAAC,cAAC+K,EAAA,EAAD,KACMpL,KAAKV,MAAMwJ,WACP3I,EAAAC,EAAAC,cAACgL,EAAA,EAAD,CAAUC,GAAG,MACdtL,KAAKV,MAAMgL,cACVnK,EAAAC,EAAAC,cAACgL,EAAA,EAAD,CAAUC,GAAG,WAEbnL,EAAAC,EAAAC,cAACgL,EAAA,EAAD,CAAUC,GAAG,cAGlBnL,EAAAC,EAAAC,cAACgL,EAAA,EAAD,KACKlL,EAAAC,EAAAC,cAACgL,EAAA,EAAD,CACKE,OAAK,EACLC,KAAK,IACLC,OAAQ,SAAAxL,GAAK,OACRE,EAAAC,EAAAC,cAACqL,EAAD,CACKxD,SAAUnI,EAAKmI,SACfnB,OAAQhH,EAAKgH,OACb7E,QAASnC,EAAKmC,QACd5C,MAAOS,EAAKT,MACZqF,WAAY5E,EAAK4E,WACjBkC,YAAa9G,EAAK8G,YAClBnD,kBAAmB3D,EAAK2D,kBACxBD,oBAAqB1D,EAAK0D,oBAC1BT,oBAAqBjD,EAAKiD,oBAC1BL,oBAAqB5C,EAAK4C,oBAC1BU,aAActD,EAAKsD,aACnBQ,YAAa9D,EAAK8D,YAClBiD,YAAa/G,EAAK+G,YAClB3B,cAAepF,EAAKoF,cACpBI,SAAUxF,EAAKwF,SACfX,SAAU7E,EAAK6E,cAK9BzE,EAAAC,EAAAC,cAACgL,EAAA,EAAD,CACKG,KAAK,SACLC,OAAQ,SAAAxL,GAAK,OACRE,EAAAC,EAAAC,cAACsL,EAAD,CACKhH,WAAY5E,EAAK4E,WACjBrF,MAAOS,EAAKT,MACZkI,SAAUzH,EAAKyH,SACfC,WAAY1H,EAAK0H,gBAIhCtH,EAAAC,EAAAC,cAACgL,EAAA,EAAD,CACKG,KAAK,YACLC,OAAQ,SAAAxL,GAAK,OACRE,EAAAC,EAAAC,cAACuL,EAAD,CACKjH,WAAY5E,EAAK4E,WACjBrF,MAAOS,EAAKT,MACZqI,YAAa5H,EAAK4H,YAClBF,WAAY1H,EAAK0H,yBAlhB/BlB,IAAM5C,WA4hB1BkI,EAAchG,SAASC,eAAe,QAC5CgG,IAASL,OAAOtL,EAAAC,EAAAC,cAAC0L,EAAD,MAAiBF","file":"static/js/main.7994f33f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\n\r\nclass Users extends Component {\r\n  state = {\r\n    query: '',\r\n    results: []\r\n  }\r\n\r\n  \r\n handleInputChange = () => {\r\n  this.setState({\r\n    query: this.search.value.toLowerCase()\r\n  })\r\n}\r\n\r\n  render() {\r\n    if ( !this.props.state.me ) {\r\n\r\n      return<h4><center>Loading...</center></h4>\r\n    }\r\n \r\n   \r\n    var findUser = ( y ) =>{\r\n          if( this.props.state.users ){\r\n                var user =  this.props.state.users.find( el => el.email === y  ) ;\r\n               // console.log(\" find user->\", user)\r\n                return user\r\n          }\r\n    }\r\n\r\n    var setClass = email => {\r\n      if (  this &&\r\n            this.props.state.data &&\r\n            //check if the fragment is in the data list\r\n            this.props.state.data.find(el => el.userEmail === email) &&\r\n            // check if message is from from partener \r\n            this.props.state.data.find( el => el.userEmail === email ).message.email === email  && \r\n            //  check if is seen from me\r\n            ( this.props.state.data.find(el => el.userEmail === email).message.time >\r\n            this.props.state.data.find(el => el.userEmail === email).seenTime )\r\n      ) {\r\n        return \"user-alert\";\r\n      } else {\r\n        return \"user\";\r\n      }\r\n    };\r\n\r\n    var extractFragment = email => {\r\n     //check if the fragment is in the data list\r\n      if ( this.props.state.data &&\r\n          this.props.state.data.find(el => el.userEmail === email ) ) {  // console.log(\" this.props.state.data\", this.props.state.data)\r\n              // check if message is from from partener \r\n              if( this.props.state.data.find( el => el.userEmail === email ).message.email !== email ){\r\n                // this fragment is from me\r\n                return(<div id=\"normal\">\r\n                              You: { this.props.state.data.find(el => el.userEmail === email).message.text}\r\n                            </div>  )\r\n              } else {\r\n                     // this fragment is from partener, so check if is seen from me\r\n                    if( this.props.state.data.find(el => el.userEmail === email).message.time >\r\n                    this.props.state.data.find(el => el.userEmail === email).seenTime ){\r\n                      // the message was not see, so make it bold\r\n                      return(<div id=\"bold\">\r\n                       { this.props.state.data.find(el => el.userEmail === email).message.text}\r\n                    </div>  )\r\n                    } else {\r\n                      // the message was see, so make it normal\r\n                      return (<div id=\"normal\">\r\n                      { this.props.state.data.find(el => el.userEmail === email).message.text}\r\n                    </div>  )\r\n                    }\r\n                \r\n              }\r\n            \r\n      } else {\r\n        //the fragment is not in the list\r\n        return \"\";\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div className=\"users\">\r\n        <input\r\n          placeholder=\" 🔍   Search for users...\"\r\n          ref={input => this.search = input}\r\n          onChange={this.handleInputChange}\r\n          style={{width: \"100%\", padding:\"4px 5px\", backgroundColor: this.props.state.me.color+\"52\" }}\r\n        />\r\n        \r\n        <div className=\"title\">Friends </div>\r\n        { this.props.state.me && this.props.state.friends_requests &&\r\n          this.props.state.show &&\r\n          this.props.state.friends_requests.map(email => {\r\n            return (\r\n              <div\r\n                className=\"user request\"\r\n                onClick={() => this.props.display(email)}\r\n                key={findUser(email)._id}\r\n              >\r\n                 <div  className=\"first\"  >\r\n                          <img src={findUser(email).photo}  alt={findUser(email).username} />\r\n                  </div>\r\n                  <div  className=\"middle\"  >\r\n                      <div className=\"user-name\">{findUser(email).firstname} {findUser(email).lastname}  </div>\r\n                      <div  className=\"message_fragment\"  >  {extractFragment(email)}  </div>\r\n                  </div>\r\n                \r\n                <button\r\n                      className=\"addFriend\"\r\n                      onClick={() => this.props.acceptFriendRequest(email)}\r\n                      name=\"Accept friend \"\r\n                      title=\"Accept friendship request \"\r\n                      style={{ backgroundColor: this.props.state.me.color+\"cc\" }}\r\n                >\r\n                  <span role=\"img\" aria-label=\"Check\">\r\n                    ✅ ?\r\n                  </span>\r\n                </button>\r\n                <button\r\n                  className=\"addFriend\"\r\n                  onClick={() => this.props.deniedFriendRequest(email)}\r\n                  name=\"Denied friendship request\"\r\n                  title=\"Denied friendship request\"\r\n                  style={{ backgroundColor: this.props.state.me.color+\"cc\" }}\r\n                >\r\n                  <span role=\"img\" aria-label=\"Delete\">\r\n                    ❌\r\n                  </span>\r\n                  ?\r\n                </button>\r\n              </div>\r\n            );\r\n          })}\r\n          \r\n        {/*  { console.log( \"test deoarece exista intarzieri de intrare a datelor la  this.props.state.friends\",  this.props.state.friends)} */}\r\n         { this && this.props.state.users &&\r\n          this.props.state.friends && \r\n          this.props.state.friends.length > 0  ? (\r\n                    this.props.state.friends.map(  user => {\r\n                            if (( user.firstname && user.firstname.toLowerCase().includes( this.state.query )) ||\r\n                            (user.lastname && user.lastname.toLowerCase().includes( this.state.query ) )){\r\n                                return (\r\n                                    <div  className={setClass(user.email)} \r\n                                        onClick={() => this.props.display(user.email)}\r\n                                        key={user._id}\r\n                                    >\r\n                                      <div  className=\"first\"  >\r\n                                                <img src={user.photo} alt={user.username} />\r\n                                        </div>\r\n                                        <div  className=\"middle\"  >\r\n                                            <div className=\"user-name\">{user.firstname} {user.lastname} </div>\r\n                                            <div  className=\"message_fragment\"  >  {extractFragment(user.email)}  </div>\r\n                                        </div>\r\n                                      <button className=\"addFriend\"\r\n                                          title=\"Remove friend\"\r\n                                          onClick={() => this.props.removeFriend(user.email)}\r\n                                          style={{ backgroundColor: this.props.state.me.color+\"cc\" }}\r\n                                      >\r\n                                        <span role=\"img\" aria-label=\"Delete\">\r\n                                          ❌\r\n                                        </span>\r\n                                      </button>\r\n                                    </div>\r\n                                      ); } else return null\r\n                    })\r\n         ) : (\r\n             <center> You don't have friends yet </center>\r\n          ) } \r\n\r\n        <div className=\"title\">Sugestions</div>\r\n         { this &&\r\n          this.props.state.sugestions &&\r\n          this.props.state.sugestions.map( user => {\r\n            if (user.firstname.toLowerCase().includes( this.state.query ) ||\r\n                 user.lastname.toLowerCase().includes( this.state.query ) ){\r\n              return (\r\n            \r\n                <div  className=\"user\"\r\n                        onClick={() => this.props.display(user.email)}\r\n                        key={user._id}>\r\n                         \r\n                              <div  className=\"first\"  >\r\n                                      <img src={user.photo} alt={user.username} />\r\n                              </div>\r\n                              <div  className=\"middle\"  >\r\n                                  <div className=\"user-name\">{user.firstname} {user.lastname} </div>\r\n                                  <div  className=\"message_fragment\"  >  {extractFragment(user.email)}  </div>\r\n                              </div>\r\n  \r\n                              { !this.props.state.me.requests_sent\r\n                              .some( el => el === user.email ) ? \r\n                              (\r\n                                <button\r\n                                        className=\"addFriend\"\r\n                                        title=\"Send friendship request\"\r\n                                        onClick={() => this.props.sendFriendRequest(user.email)}\r\n                                        style={{ backgroundColor: this.props.state.me.color+\"cc\" }}>\r\n                                        Send\r\n                                </button>\r\n                              ) : (\r\n                                <button\r\n                                        className=\"addFriend\"\r\n                                        title=\"Revoke friendship request\"\r\n                                        onClick={() => this.props.revokeFriendRequest(user.email)}\r\n                                        style={{ backgroundColor: this.props.state.me.color+\"cc\" }} >\r\n                                        x\r\n                                </button>\r\n                      )}\r\n              </div>\r\n                )\r\n            } else return null;\r\n           \r\n\r\n                })\r\n                \r\n          } \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Users;\r\n","import React, { Component } from \"react\";\r\n//import { ColorPicker } from 'react-input-color';\r\n\r\nclass Profile extends Component {\r\n     render() {\r\n          if (!this.props.state.me)\r\n               return (\r\n                    <h4>\r\n                         <center>Loading...</center>\r\n                    </h4>\r\n               );\r\n          if (this.props.state.users) {\r\n               var user = this.props.state.users.find(el => el.email === this.props.state.display);\r\n          }\r\n          /*   if (user === undefined) {\r\n           \r\n            if(  this && this.props.state.sugestions  &&  this.props.state.friends.length === 0){\r\n              user= this.props.state.sugestions[0]\r\n             // this.props.display( this.props.state.sugestions[0].email);\r\n              // console.log(\"111user in profil:----------\", user )\r\n              }\r\n              if( this && this.props.state.friends && this.props.state.friends.length > 0 ){\r\n                 user = this.props.state.friends[0]\r\n                // console.log(\"2222user in profil:----------\", user )\r\n              }\r\n                // return <h3>Please select a user</h3>\r\n        } */\r\n\r\n          function convertUNIX(input) {\r\n               var time = new Date(input);\r\n               var options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\r\n               return /* time.toLocaleDateString('en-EN', options) + \"\\n\" + */ time.toLocaleTimeString('en-EN', options);\r\n          }\r\n\r\n          var findUser = y => {\r\n               if (this.props.state.users) {\r\n                    var user = this.props.state.users.find(el => el.email === y);\r\n                    // console.log(\" find user->\", user)\r\n                    return user;\r\n               }\r\n          };\r\n          //console.log(\"user selected------>\", user)\r\n          return (\r\n               <div className=\"profile\">\r\n                    {this.props.state.friends_requests && this.props.state.friends_requests.length > 0 ? (\r\n                         <div className=\"alert-inform\" onClick={this.props.showProfile}>\r\n                              <span role=\"img\" aria-label=\"Notification\" title=\"Notification\">\r\n                                   🔔\r\n                              </span>\r\n                              You have {this.props.state.friends_requests.length} friendship requests! <br />\r\n                              Click to view\r\n                         </div>\r\n                    ) : null}\r\n                    <div className=\"title\">Profile</div>\r\n\r\n                    {user && user.last_activity && Date.now() - user.last_activity < 120000 ? (\r\n                         <div className=\"last-activity\">\r\n                              <span id=\"online-bullet\">\r\n                                   <img\r\n                                        src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/3/31/Button_Icon_Green.svg/768px-Button_Icon_Green.svg.png\"\r\n                                        alt=\"Online\"\r\n                                        title=\"Online\"\r\n                                   />\r\n                              </span>\r\n                              Online\r\n                         </div>\r\n                    ) : (\r\n                         <div className=\"last-activity\">Last activity: <br/><b>{user && convertUNIX(user.last_activity)} </b></div>\r\n                    )}\r\n\r\n                    <div className=\"name\">\r\n                         {user && user.firstname} {user && user.lastname}\r\n                    </div>\r\n\r\n                    <img src={user && user.photo} alt={user && user.email} />\r\n                    <div className=\"tel\">Phone: {user && user.tel}</div>\r\n                    <div className=\"email\">Email: {user && user.email}</div>\r\n\r\n                    {this.props.state.display === this.props.state.me.email ? (\r\n                         <div>\r\n                              <h6>Click and select your favorite color: </h6>\r\n                              <input\r\n                                   type=\"color\"\r\n                                   style={{ width: \" 30px\", height: \" 30px\", borderRadius: \"50%\", display: \"inline\" }}\r\n                                   name=\"favcolor\"\r\n                                   id=\"favcolor\"\r\n                                   defaultValue={this.props.state.color}\r\n                                   onChange={this.props.updateData}\r\n                              />\r\n                              <input\r\n                                   type=\"submit\"\r\n                                   value=\"Save\"\r\n                                   onClick={this.props.setColor}\r\n                                   style={{\r\n                                        backgroundColor: this.props.state.me.color,\r\n                                        padding: \" 4px 12px\",\r\n                                        display: \"inline\",\r\n                                        position: \"relative\",\r\n                                        top: \"-5px\"\r\n                                   }}\r\n                              />\r\n                         </div>\r\n                    ) : null}\r\n\r\n                    <div className=\"his-friends\">\r\n                         <div className=\"title\">User's friends</div>\r\n                         {user &&\r\n                              user.friends &&\r\n                              user.friends\r\n                                   .filter(em => em !== this.props.state.me.email)\r\n                                   .map(email => {\r\n                                        return (\r\n                                             <div className=\"user\" onClick={() => this.props.display(email)} key={findUser(email)._id}>\r\n                                                  <div className=\"first\">\r\n                                                       <img className=\"friend-photo\" src={findUser(email).photo} alt={findUser(email).username} />\r\n                                                  </div>\r\n                                                  <div className=\"middle\">\r\n                                                       <div className=\"user-name\" style={{ top: \"18px\" }}>\r\n                                                            {findUser(email).firstname} {findUser(email).lastname}\r\n                                                       </div>\r\n                                                  </div>\r\n\r\n                                                  {this.props.state.me.requests_sent.some(el => el === email) ||\r\n                                                  this.props.state.me.friends.some(elem => elem === email) ? (\r\n                                                       <button\r\n                                                            className=\"addFriend\"\r\n                                                            title=\"Revoke friendship request\"\r\n                                                            onClick={() => this.props.revokeFriendRequest(email)}\r\n                                                            style={{ backgroundColor: this.props.state.me.color + \"cc\" }}\r\n                                                       >\r\n                                                            x\r\n                                                       </button>\r\n                                                  ) : (\r\n                                                       <button\r\n                                                            className=\"addFriend\"\r\n                                                            title=\"Send friendship request\"\r\n                                                            onClick={() => this.props.sendFriendRequest(email)}\r\n                                                            style={{ backgroundColor: this.props.state.me.color + \"cc\" }}\r\n                                                       >\r\n                                                            Send\r\n                                                       </button>\r\n                                                  )}\r\n                                             </div>\r\n                                        );\r\n                                   })}\r\n                    </div>\r\n               </div>\r\n          );\r\n     }\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\n\r\nconst ProfileEdit = ( props ) =>{\r\n    return (\r\n        <div className=\"wrapper fadeInDown\">\r\n            <div id=\"formContent\" >\r\n              <div className=\"fadeIn first\">\r\n              <i className=\"fa fa-user\"> Edit your profile</i>\r\n              </div>\r\n                  <table>\r\n                  <tbody> \r\n                      <tr>\r\n                          <td>\r\n                              <input type=\"text\" id=\"firstname\" className=\"fadeIn second\" name=\"firstname\" placeholder=\"Firstname\"\r\n                                onChange={props.updateData} defaultValue={props.state.me.firstname} />\r\n                          </td>\r\n                          <td>\r\n                            <input type=\"text\" id=\"lastname\" className=\"fadeIn second\" name=\"lastname\" placeholder=\"Lastname\"\r\n                                onChange={props.updateData}  defaultValue={props.state.me.lastname}/>\r\n                          </td>\r\n                      </tr>\r\n                      <tr>\r\n                          <td>\r\n                              <input type=\"text\" id=\"password\" className=\"fadeIn second\" name=\"password\"  placeholder=\"Old password\"\r\n                              onChange={props.updateData} />\r\n                          </td>\r\n                          <td>\r\n                              <input type=\"text\" id=\"rpassword\" className=\"fadeIn second\" name=\"rpassword\"  placeholder=\"New password\"\r\n                                onChange={props.updateData} />\r\n                          </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>\r\n                            <input type=\"text\" id=\"tel\" className=\"fadeIn second\" name=\"tel\" placeholder=\"Phone\"\r\n                            onChange={props.updateData}  defaultValue={props.state.me.tel}/>\r\n                        </td>\r\n                        <td>\r\n                              <input type=\"text\" id=\"photo\" className=\"fadeIn second\" name=\"photo\" placeholder=\"Photo\"\r\n                                onChange={props.updateData} defaultValue={props.state.me.photo}/>\r\n                        </td>\r\n                      </tr>\r\n                  </tbody>\r\n              </table>\r\n                  <input type=\"submit\" className=\"fadeIn fourth\" onClick={props.profileChange} value=\"Submit\"  /> <br/>  \r\n\r\n                   { props.state.inform ?\r\n                  <label id=\"inform\">{props.state.inform}</label>  :\r\n                  null  }  \r\n                \r\n              \r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default ProfileEdit;","import React from \"react\";\r\n\r\nconst Info = props => {\r\n     return (\r\n          <div className=\"wrapper fadeInDown\">\r\n               <div id=\"formContent\">\r\n                    <div className=\"fadeIn first\">\r\n                         <i className=\"fa fa-user\"> Info</i>\r\n                    </div>\r\n                    <h5>Conversation are allowed only between friends.</h5>\r\n                    <h5>\r\n                         So, make some friends...\r\n                         <span role=\"img\" aria-label=\"Check\">\r\n                              🤝\r\n                         </span>\r\n                    </h5>\r\n                    {props.state.inform ? <label id=\"inform\">{props.state.inform}</label> : null}\r\n\r\n                    <div id=\"formFooter\" />\r\n               </div>\r\n          </div>\r\n     );\r\n};\r\n\r\nexport default Info;\r\n","import React from \"react\";\r\nimport ProfileEdit from \"./ProfileEdit\";\r\nimport  Info from \"./Info\"\r\n\r\nclass Message extends React.Component {\r\n  state = {\r\n    query: '',\r\n    results: []\r\n  }\r\n  componentWillReceiveProps(){\r\n      //scroll up the consversation\r\n      this.props.scrollUP(); \r\n  }\r\n  handleInputChange = () => {\r\n    this.setState({\r\n      query: this.search.value.toLowerCase()\r\n    })\r\n  }\r\n  render() {\r\n    \r\n    function convertUNIX(input) {\r\n      var time = new Date(input);\r\n      return time.toLocaleTimeString();\r\n      // time.toGMTString() + '\\n' +\r\n    }\r\n    function convertDayUNIX(input) {\r\n     \r\n      var time = new Date(input);\r\n      var options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\r\n     // return time.toLocaleTimeString();\r\n      return time.toLocaleDateString('en-EN', options)\r\n    }\r\n\r\n\r\n      var nr = 0;\r\n     const setStyle=( index, mes )=>{\r\n        //console.log( \"nr----?->\", nr,\" index->\", index )\r\n     \r\n            if((  index > 1 && mes.email !== this.props.state.conversation[ index - 1 ].email ) ||\r\n            ( index > 1  &&  mes.time -this.props.state.conversation[index-1].time > 3600000 )\r\n           ){\r\n              nr = 0;  \r\n            }\r\n       \r\n          if( index > 1 && nr ===1 &&  document.getElementById( index )// &&\r\n         // ( index > 1  &&  mes.time -this.props.state.conversation[index-1].time > 3600000 )\r\n          ){\r\n       \r\n           document.getElementById( index -nr ).className =\"text-mesage up\"; \r\n           document.getElementById( index  ).className =\"text-mesage down\";\r\n           }\r\n          if( index > 1 && nr > 1 &&  document.getElementById( index )  //&&\r\n        //  ( index > 1  &&  mes.time -this.props.state.conversation[index-1].time > 3600000 )\r\n          ){\r\n           //console.log( \"nr----?->\", nr,\" index->\", index )\r\n           \r\n           document.getElementById( index -1 ).className =\"text-mesage middle\";\r\n         \r\n           document.getElementById( index ).className =\"text-mesage down\";  \r\n           document.getElementById( index - nr ).className =\"text-mesage up\";  \r\n          }\r\n          nr++;\r\n         if( mes.email !== this.props.state.me.email)\r\n        return( \r\n          { backgroundColor: this.props.state.me.color+\"bd\" }\r\n          ) \r\n         \r\n     }\r\n   \r\n\r\n      \r\n\r\n      \r\n\r\n    const setPosition =( email, index )=> {\r\n      \r\n        if ( this.props.state.me.email !== email) {\r\n              if (  index > 1 && email !== this.props.state.conversation[ index - 1 ].email ){\r\n                return \" oriented-left \";\r\n              } else\r\n              return \" oriented-left \";\r\n        } else {\r\n          if (  index > 1 && email !== this.props.state.conversation[ index - 1 ].email ){\r\n            return \" oriented-right \";\r\n          } else\r\n            return \" oriented-right \" ;\r\n        }\r\n    };\r\n\r\n    if( this &&  this.props.state.participants !== null  && this.props.state.participants ){\r\n        var seenTime = this.props.state.participants[0] &&\r\n        this.props.state.participants.find( el => el.email !== this.props.state.me.email ).seen\r\n        /* console.log(\"888888---:\", this.props.state.participants[0] &&\r\n        this.props.state.participants.filter( el => el.email !== this.props.state.me.email )[0].seen) */\r\n    } else {\r\n         seenTime = null;\r\n    }\r\n\r\n    if( this.props.state.profile_edit ){\r\n      return (\r\n      <div className=\"edit-profile\">\r\n            <ProfileEdit\r\n               state={this.props.state} \r\n               updateData={this.props.updateData} \r\n               profileChange={this.props.profileChange}/> \r\n      </div>\r\n       \r\n      );\r\n     }\r\n     if(  this && !this.props.state.conversation /* && this.props.state.conversation.length ===1 */ ){\r\n      return (\r\n      <div className=\"edit-profile\">\r\n            <Info  state={this.props.state} />\r\n      </div>\r\n       \r\n      );\r\n     }\r\n  \r\n \r\n\r\n    return (\r\n      <div id=\"intermediate\">\r\n    \r\n        <input\r\n          placeholder=\" 🔍  Search for messages... \"\r\n          ref={input => this.search = input}\r\n          onChange={this.handleInputChange}\r\n          style={{width: \"100%\", padding:\"4px 10px\", backgroundColor: this.props.state.me.color+\"52\" }}\r\n        />\r\n            <div className=\"title\">Conversations</div>\r\n        <div id=\"conversation\">\r\n     \r\n          { this.props.state.conversation &&\r\n           this.props.state.conversation.map((mes, index) => {\r\n            if (mes.text.toLowerCase().includes( this.state.query ) ){\r\n\r\n\r\n                  return (\r\n                        <div key={index} id=\"message\"\r\n                         className={ setPosition( mes.email, index ) }>\r\n\r\n{ /*  ( index > 1  && \r\n  (  convertDayUNIX(mes.time) !==\r\n    convertDayUNIX( this.props.state.conversation[index-1].time)  ||\r\n   index === 0 )) ? \r\n(  <div className=\"date-time\"> { convertDayUNIX(mes.time) }</div> )\r\n : null   */\r\n }\r\n { ( ( index > 1  &&  mes.time -this.props.state.conversation[index-1].time > 3600000 )  ||\r\n   index === 0 ) ? \r\n(  <div className=\"date-time\"> { convertDayUNIX(mes.time) }</div> )\r\n : null }\r\n                              { <span className=\"text-mesage\"  style={ setStyle( index, mes ) }\r\n                               id={index } > { mes.text } </span> }\r\n                           \r\n                              { (mes.email === this.props.state.me.email) ?\r\n                              ( ( mes.time >= seenTime ) ?\r\n                              ( <span role=\"img\" className=\"unseed\" aria-label=\"Check unseen\" title=\"Message useen\"> ✔</span> ) : \r\n                              (  <img src=\"https://www.clipartmax.com/png/full/51-513171_seen-whatsapp-vector.png\"\r\n                              alt=\"seen\" title=\"Message seen\" width=\"16\" /> ) ) :\r\n                              null } \r\n                                  \r\n                              <span className=\"time-message\"> { convertUNIX(mes.time) }</span>\r\n                        </div>\r\n                  );\r\n           } else return null;\r\n          }) }\r\n        </div>\r\n      </div>\r\n    );\r\n    \r\n  }\r\n \r\n}\r\n\r\nexport default Message;\r\n","import React, { Component } from \"react\";\r\nimport Users from \"./Users\";\r\nimport Profile from \"./Profile\";\r\nimport Message from \"./Message\";\r\n\r\nclass Messenger extends Component {\r\n     keyEnter = e => {\r\n          //  function for set enter key on submit messages\r\n          if (e.charCode === 13 || e.keyCode === 13) {\r\n               this.props.sendMessage();\r\n          }\r\n     };\r\n\r\n     render() {\r\n          return (\r\n               <div id=\"block\">\r\n                    <div className=\"head\" style={{ backgroundColor: this.props.state.me.color }}>\r\n                         <table className=\"right-side\">\r\n                              <tbody>\r\n                                   <tr>\r\n                                        <td>\r\n                                             <span\r\n                                                  role=\"img\"\r\n                                                  aria-label=\"Edit\"\r\n                                                  title=\"Edit your profile\"\r\n                                                  id=\"edit-profile\"\r\n                                                  onClick={this.props.editProfile}\r\n                                             >\r\n                                                  ⚙\r\n                                             </span>\r\n                                        </td>\r\n                                        <td>\r\n                                             <span role=\"img\" aria-label=\"Profile\" title=\"Profile\" id=\"profile\" onClick={this.props.showProfile}>\r\n                                                  {\" \"}\r\n                                                  👨‍🔧\r\n                                                  <span id=\"counter\" title=\"Friends requests\">\r\n                                                       {this.props.state.me && this.props.state.me.friends_requests ? (\r\n                                                            this.props.state.me.friends_requests.length\r\n                                                       ) : (\r\n                                                            <span>0</span>\r\n                                                       )}\r\n                                                  </span>\r\n                                             </span>\r\n                                        </td>\r\n                                        <td>\r\n                                             <button id=\"logout\" onClick={this.props.logout}>\r\n                                                  Log Out\r\n                                             </button>\r\n                                        </td>\r\n                                   </tr>\r\n                              </tbody>\r\n                         </table>\r\n                    </div>\r\n                    <div className=\"box\">\r\n                         <div className=\"left\">\r\n                              <Users\r\n                                   display={this.props.display}\r\n                                   state={this.props.state}\r\n                                   sendFriendRequest={this.props.sendFriendRequest}\r\n                                   revokeFriendRequest={this.props.revokeFriendRequest}\r\n                                   deniedFriendRequest={this.props.deniedFriendRequest}\r\n                                   acceptFriendRequest={this.props.acceptFriendRequest}\r\n                                   removeFriend={this.props.removeFriend}\r\n                              />\r\n                         </div>\r\n                         <div className=\"center\" id=\"scroll\">\r\n                              <Message\r\n                                   state={this && this.props.state}\r\n                                   updateData={this.props.updateData}\r\n                                   scrollUP={this.props.scrollUP}\r\n                                   profileChange={this.props.profileChange}\r\n                              />\r\n\r\n                              {//  !this.props.state.profile_edit ||\r\n\r\n                              this.props.state.me &&\r\n                              this.props.state.me.friends &&\r\n                              this.props.state.me.friends.some(el => el === this.props.state.display) ? (\r\n                                   <div id=\"inputMessage\" style={{ backgroundColor: this.props.state.me.color + \"52\" }}>\r\n                                        {this.props.state.info ? <label id=\"inform\">{this.props.state.info}</label> : null}\r\n\r\n                                        <input\r\n                                             type=\"text\"\r\n                                             placeholder=\"Your message\"\r\n                                             onChange={this.props.updateData}\r\n                                             id=\"message\"\r\n                                             name=\"message\"\r\n                                             value={this.props.state.message}\r\n                                             onKeyDown={this.keyEnter}\r\n                                        />\r\n\r\n                                        <span>\r\n                                             <input\r\n                                                  type=\"submit\"\r\n                                                  style={{ backgroundColor: this.props.state.me.color }}\r\n                                                  id=\"message-submit\"\r\n                                                  value=\"Send\"\r\n                                                  onClick={this.props.sendMessage}\r\n                                             />\r\n                                        </span>\r\n                                   </div>\r\n                              ) : null}\r\n                         </div>\r\n                         <div className=\"right\">\r\n                              <Profile\r\n                                   state={this.props.state}\r\n                                   showProfile={this.props.showProfile}\r\n                                   display={this.props.display}\r\n                                   setColor={this.props.setColor}\r\n                                   updateData={this.props.updateData}\r\n                                   sendFriendRequest={this.props.sendFriendRequest}\r\n                                   revokeFriendRequest={this.props.revokeFriendRequest}\r\n                              />\r\n                         </div>\r\n                    </div>\r\n               </div>\r\n          );\r\n     }\r\n}\r\n\r\nexport default Messenger;\r\n","import React from 'react';\r\nconst LogIn = (props)=> {\r\n    \r\n    return (\r\n        <div className=\"wrapper fadeInDown\">\r\n            <div id=\"formContent\">\r\n                    <div className=\"fadeIn first\">\r\n                          <i className=\"fa fa-user\"> Login</i>\r\n                    </div>    \r\n                    <input type=\"text\" id=\"myEmail\" className=\"fadeIn second\" name=\"Email\" placeholder=\"Email\" \r\n                            onChange={props.updateData} value={props.myEmail}/>\r\n                    <input type=\"text\" id=\"password\" className=\"fadeIn third\" name=\"password\" placeholder=\"Password\"\r\n                            onChange={props.updateData} value={props.password}/>\r\n                    <input type=\"submit\" className=\"fadeIn fourth\" value=\"Log In\" onClick={props.tryLogin} />   <br/> \r\n                    { props.state.inform ?\r\n                    <label  id=\"inform\">{props.state.inform}</label>\r\n                    : null  }  \r\n                    \r\n                <div id=\"formFooter\">\r\n                        <p className=\"underlineHover\"  onClick={props.changeForm}>You don't have a count? <b>Register!</b></p>\r\n                </div>\r\n            </div>\r\n      </div>\r\n    );\r\n   \r\n}\r\n\r\nexport default LogIn;","import React from \"react\";\r\n\r\nconst Register = props => {\r\n     return (\r\n          <div className=\"wrapper fadeInDown\">\r\n               <div id=\"formContent\">\r\n                    <div className=\"fadeIn first\">\r\n                         <i className=\"fa fa-user\"> Register</i>\r\n                    </div>\r\n                    <table>\r\n                         <tbody>\r\n                              <tr>\r\n                                   <td>\r\n                                        <input\r\n                                             type=\"text\"\r\n                                             id=\"username\"\r\n                                             className=\"fadeIn second\"\r\n                                             name=\"username\"\r\n                                             placeholder=\"Username\"\r\n                                             onChange={props.updateData}\r\n                                        />\r\n                                   </td>\r\n                                   <td>\r\n                                        <input\r\n                                             type=\"text\"\r\n                                             id=\"email\"\r\n                                             className=\"fadeIn second\"\r\n                                             name=\"email\"\r\n                                             placeholder=\"Email\"\r\n                                             onChange={props.updateData}\r\n                                        />\r\n                                   </td>\r\n                              </tr>\r\n                              <tr>\r\n                                   <td>\r\n                                        <input\r\n                                             type=\"text\"\r\n                                             id=\"firstname\"\r\n                                             className=\"fadeIn second\"\r\n                                             name=\"firstname\"\r\n                                             placeholder=\"Firstname\"\r\n                                             onChange={props.updateData}\r\n                                        />\r\n                                   </td>\r\n                                   <td>\r\n                                        <input\r\n                                             type=\"text\"\r\n                                             id=\"lastname\"\r\n                                             className=\"fadeIn second\"\r\n                                             name=\"lastname\"\r\n                                             placeholder=\"Lastname\"\r\n                                             onChange={props.updateData}\r\n                                        />\r\n                                   </td>\r\n                              </tr>\r\n                              <tr>\r\n                                   <td>\r\n                                        <input\r\n                                             type=\"text\"\r\n                                             id=\"password\"\r\n                                             className=\"fadeIn second\"\r\n                                             name=\"password\"\r\n                                             placeholder=\"Password\"\r\n                                             onChange={props.updateData}\r\n                                        />\r\n                                   </td>\r\n                                   <td>\r\n                                        <input\r\n                                             type=\"text\"\r\n                                             id=\"rpassword\"\r\n                                             className=\"fadeIn second\"\r\n                                             name=\"rpassword\"\r\n                                             placeholder=\"Repeat password\"\r\n                                             onChange={props.updateData}\r\n                                        />\r\n                                   </td>\r\n                              </tr>\r\n                              <tr>\r\n                                   <td>\r\n                                        <input\r\n                                             type=\"text\"\r\n                                             id=\"tel\"\r\n                                             className=\"fadeIn second\"\r\n                                             name=\"tel\"\r\n                                             placeholder=\"Phone\"\r\n                                             onChange={props.updateData}\r\n                                        />\r\n                                   </td>\r\n                                   <td>\r\n                                        <input\r\n                                             type=\"text\"\r\n                                             id=\"photo\"\r\n                                             className=\"fadeIn second\"\r\n                                             name=\"photo\"\r\n                                             placeholder=\"Photo\"\r\n                                             onChange={props.updateData}\r\n                                        />\r\n                                   </td>\r\n                              </tr>\r\n                         </tbody>\r\n                    </table>\r\n                    <input type=\"submit\" className=\"fadeIn fourth\" onClick={props.tryRegister} value=\"Register\" /> <br />\r\n                    {props.state.inform ? <label id=\"inform\">{props.state.inform}</label> : null}\r\n                    <div id=\"formFooter\">\r\n                         <p className=\"underlineHover\" onClick={props.changeForm}>\r\n                              Do you have a count?<b>Login!</b>{\" \"}\r\n                         </p>\r\n                    </div>\r\n               </div>\r\n          </div>\r\n     );\r\n};\r\n\r\nexport default Register;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from \"axios\";\nimport \"./index.css\";\nimport Messenger from \"./components/Messenger\";\nimport LogIn from \"./components/LogIn\";\nimport Register from \"./components/Register\";\nimport socketIOClient from \"socket.io-client\";\nimport { BrowserRouter, Route, Redirect, Switch } from \"react-router-dom\";\n\nclass FrontendApp extends React.Component {\n     constructor() {\n          super();\n\n          this.initialstate = {\n               username: \"\",\n               email: \"\",\n               firstname: \"\",\n               lastname: \"\",\n               password: \"\",\n               rpassword: \"\",\n               tel: \"\",\n               photo: \"\",\n               message: \"\",\n               inform: \"\",\n               info: \"\",\n               myEmail: \"\",\n               me: \"\",\n               color: \"#56baed\",\n               users: [],\n               autentificate: true,\n               authorized: false,\n               display: \"\",\n               conversation: [],\n               friends_requests: [],\n               requests_sent: [],\n               friends: [],\n               sugestions: [],\n               participants: [],\n               show: false,\n               profile_edit: false,\n               data: [],\n               loaded: false,\n               response: false,\n               endpoint: process.env.PORT || \"http://localhost:4000\"\n          };\n\n          this.state = this.initialstate;\n     }\n\n     loadData = myEmail => {\n          console.log(\"-----loadData-------:\")\n// this function load data from backend sockets\n          const socket = socketIOClient(this.state.endpoint);\n\n          socket.on(\"usersAPI\", users => {\n                 console.log(\"socket was connected and response:\", users)\n               this.sortUsers(users, myEmail);\n          });\n          socket.on(\"fragmentAPI\" + myEmail, data =>\n               this.setState( { data } )\n          );\n          socket.on(\"conversationAPI\" + myEmail, data =>\n               this.setState(\n                    { conversation: data.messages, participants: data.participants }\n                    /*  console.log(\"conversationAPI: \",data)  */\n               )\n          );\n     };\n\n     sortUsers = (users, myEmail) => {\n       // function for sort users\n          if (!myEmail) {\n               myEmail = this.state.myEmail;\n          }\n          // console.log(\"triger the sortUsers = ( users, myEmail  ):->\", users, myEmail )\n          if (users) {\n               var me = users.find(el => el.email === myEmail);\n               var sugestions =\n                    me &&\n                    users\n                         .filter(user => user.email !== me.email)\n                         .filter(el => el.email !== me.friends.find(email => email === el.email))\n                         .filter(\n                              elem =>\n                                   elem.email !==\n                                   me.friends_requests.find(email => email === elem.email)\n                         )\n                         .sort((a, b) => {\n                              if (a.last_activity > b.last_activity) {\n                                   return -1;\n                              } else if (a.last_activity < b.last_activity) {\n                                   return 1;\n                              }\n                              return 0;\n                         });\n               var friends =\n                    me &&\n                    users\n                         .filter(\n                              friend =>\n                                   friend.email === me.friends.find(email => email === friend.email)\n                         )\n                         .sort((a, b) => {\n                              if (a.last_activity > b.last_activity) {\n                                   return -1;\n                              } else if (a.last_activity < b.last_activity) {\n                                   return 1;\n                              }\n                              return 0;\n                         });\n          }\n\n          this.setState({\n               users,\n               me,\n               sugestions,\n               friends,\n               friends_requests: me.friends_requests,\n               requests_sent: me.requests_sent,\n               authorized: true\n          });\n\n          if (this.state.display === \"\" && friends.length > 0) {\n               this.display(friends[0].email);\n          } else if (this.state.display === \"\" && friends.length === 0) {\n               this.display(this.state.sugestions[0].email);\n          }\n     };\n\n     display = email => {\n       // function which set what conversation will be displayed in center\n          // console.log(\"display-->email: \", email)\n          if (this.state.profile_edit) {\n               this.setState({ profile_edit: false, inform: \"\" });\n          }\n          axios.get(\"http://localhost:4000/conversation\", {\n               headers: {\n                    token: window.localStorage.getItem(\"token\"),\n                    hisemail: email\n               }\n          })\n               .then(res => {\n                    if (res.data.data !== null) {\n                         //console.log( \"res.data.data.messages\", res.data.data.messages)\n                         this.setState({\n                              display: email,\n                              inform: \"\"\n                              //conversation: res.data.data.messages,\n                              //participants: res.data.data.participants\n                         });\n                    } else {\n                         var conversation = [\n                              {\n                                   text: \"Conversations are allowed only between friends :)).\",\n                                   email: this.state.me.email,\n                                   time: Date.now()\n                              }\n                         ];\n                         this.setState({\n                              display: email,\n                              conversation: conversation,\n                              participants: [],\n                              inform: \"\"\n                         });\n                    }\n               })\n               .catch(err => {\n                    console.log(\"Error in DB for display conversation\", err);\n\n                    this.setState({\n                         display: email,\n                         //conversation: [],\n                         //participants: [],\n                         inform: \"\"\n                    });\n               });\n// after set the conversation, it must scroll up the text\n          this.scrollUP();\n     };\n\n     updateData = event => {\n       // function for update state with input value\n          this.setState({\n               [event.target.id]: event.target.value,\n               inform: \"\",\n               info: \"\"\n          });\n     };\n\n     setColor = () => {\n       // function for setting the favorite color on the user page\n          if (this.state.color) {\n               var color = this.state.favcolor;\n          } else {\n               color = this.state.me.color;\n          }\n          axios.post(\"http://localhost:4000/changecolorprofile\", {\n               token: window.localStorage.getItem(\"token\"),\n               color: color\n          })\n               .then(response => {\n                    this.loadData();\n                    //console.log(\" response\", response);\n\n                    if (this.state.me.email) {\n                         this.setState({\n                              inform: response.data.inform,\n                              display: this.state.me.email,\n                              color: this.state.favcolor\n                         });\n                    }\n               })\n               .catch(error => {\n                    console.log(error, \"eroare la accesare\");\n               });\n     };\n     profileChange = () => {\n      // function for changing user identification data\n          if (this.state.firstname) {\n               var firstname = this.state.firstname;\n          } else {\n               firstname = this.state.me.firstname;\n          }\n          if (this.state.lastname) {\n               var lastname = this.state.lastname;\n          } else {\n               lastname = this.state.me.lastname;\n          }\n          if (this.state.tel) {\n               var tel = this.state.tel;\n          } else {\n               tel = this.state.me.tel;\n          }\n          if (this.state.photo) {\n               var photo = this.state.photo;\n          } else {\n               photo = this.state.me.photo;\n          }\n          if (this.state.color) {\n               var color = this.state.color;\n          } else {\n               color = this.state.me.color;\n          }\n          axios.post(\"http://localhost:4000/changeprofile\", {\n               token: window.localStorage.getItem(\"token\"),\n               firstname: firstname,\n               lastname: lastname,\n               original_pass: this.state.password,\n               new_pass: this.state.rpassword,\n               tel: tel,\n               photo: photo,\n               color: color\n          })\n               .then(response => {\n                    //  console.log(\" response\",  response)\n\n                    if (this.state.me.email) {\n                         this.setState({\n                              inform: response.data.inform,\n                              display: this.state.me.email\n                         });\n                    }\n               })\n               .catch(error => {\n                    console.log(error, \"error\");\n                    this.setState({ inform: \"Old password didn't match!\" });\n               });\n     };\n\n     changeForm = () => {\n       // function for change between login and register form\n          this.setState({ autentificate: !this.state.autentificate });\n     };\n\n     logout = () => {\n          window.localStorage.removeItem(\"token\");\n          this.setState(this.initialstate);\n     };\n\n     scrollUP = () => {\n       // function for scroll up the conversation\n          var elmnt = document.getElementById(\"conversation\");\n          if (elmnt !== null) {\n               elmnt.scrollTop = elmnt.scrollHeight;\n          }\n     };\n     showProfile = () => {\n       // function for displaying the user profile\n          this.setState({\n               show: !this.state.show,\n               display: this.state.me.email\n          });\n     };\n     editProfile = () => {\n       // function for edit the user's dates\n          this.setState({\n               profile_edit: !this.state.profile_edit,\n               display: this.state.me.email,\n               inform: \" If you don't want change your password, just leave the fields empty\"\n          });\n     };\n\n     sendMessage = () => {\n       // function for send messages\n          //console.log(\" toUserEmail\",  this.state.message );\n          if (this.state.message === \"\") return;\n          if (this.state.message.length > 1000) {\n               this.setState({\n                    info: \"This message is longer than 1000 characters!\"\n               });\n               return;\n          }\n\n          axios.post(\"http://localhost:4000/addmessage\", {\n               token: window.localStorage.getItem(\"token\"),\n               hisemail: this.state.display,\n               message: this.state.message\n          })\n               .then(res => {\n                    // console.log( \" sendMessage res.data: \", res.data  );\n                    // this.display(this.state.display);\n                    this.setState({ message: \"\", info: \"\" });\n                    this.scrollUP();\n               })\n               .catch(err => {\n                    console.log(err);\n                    this.setState({\n                         message: \"\",\n                         info: \"This message is longer than 1000 characters!\"\n                    });\n               });\n          this.scrollUP();\n     };\n     tryRegister = () => {\n          if (this.state.rpassword !== this.state.password) {\n               this.setState({ inform: \"Passwords don't match!\" });\n               return;\n          }\n          axios.post(\"http://localhost:4000/register\", {\n               username: this.state.username,\n               email: this.state.email,\n               firstname: this.state.firstname,\n               lastname: this.state.lastname,\n               password: this.state.password,\n               tel: this.state.tel,\n               photo: this.state.photo\n          })\n               .then(response => {\n                    console.log(response);\n                    this.setState({ inform: response.data.inform });\n               })\n               .catch(err => {\n                    this.setState({ inform: err.response.data.inform });\n                    console.log(err);\n               });\n     };\n\n     tryLogin = () => {\n          axios.post(\"http://localhost:4000/login\", {\n               email: this.state.myEmail,\n               password: this.state.password\n          })\n               .then(response => {\n                    if (response.data.token && this.state.myEmail === response.data.myEmail) {\n                         this.secretToken = response.data.token;\n                         window.localStorage.setItem(\"token\", response.data.token);\n\n                         this.setState({\n                              authorized: true,\n                              inform: response.data.inform\n                         });\n\n                         this.loadData(response.data.myEmail);\n                    } else {\n                         this.setState({ inform: response.data.inform });\n                    }\n               })\n               .catch(err => {\n                    this.setState({ inform: \"Wrong combination!\" });\n                    console.log(err);\n               });\n     };\n\n     sendFriendRequest = email => {\n          axios.post(\"http://localhost:4000/sendfriendrequest\", {\n               token: window.localStorage.getItem(\"token\"),\n               email_target: email\n          })\n               .then(response => {\n                    //  console.log(\"response.data.requestSentEmail\", response.data );\n               })\n               .catch(error => {\n                    console.log(error, \"eroare la accesare\");\n               });\n     };\n     revokeFriendRequest = email => {\n          axios.post(\"http://localhost:4000/revokefriendrequest\", {\n               token: window.localStorage.getItem(\"token\"),\n               email_target: email\n          })\n               .then(response => {\n                    // console.log(\"response.data.revokefriendrequest\", response.data );\n               })\n               .catch(error => {\n                    console.log(error, \"eroare la accesare\");\n               });\n     };\n     deniedFriendRequest = email => {\n          axios.post(\"http://localhost:4000/deniedfriendrequest\", {\n               token: window.localStorage.getItem(\"token\"),\n               email_target: email\n          })\n               .then(response => {\n                    //console.log(response)\n                    //  this.users();\n               })\n               .catch(error => {\n                    console.log(error, \"eroare la accesare\");\n               });\n     };\n     acceptFriendRequest = email => {\n          axios.post(\"http://localhost:4000/acceptfriendrequest\", {\n               token: window.localStorage.getItem(\"token\"),\n               email_target: email\n          })\n               .then(response => {\n                    //console.log(\"response\", response)\n                    //this.users();\n               })\n               .catch(error => {\n                    console.log(error, \"eroare la accesare\");\n               });\n     };\n\n     removeFriend = email => {\n          var confirmation = window.confirm(\n               \"You will delete this user from your friends list. Are you sure?\"\n          );\n          if (confirmation) {\n               axios.post(\"http://localhost:4000/removefriend\", {\n                    token: window.localStorage.getItem(\"token\"),\n                    email_target: email\n               })\n                    .then(response => {\n                         //console.log(\" response\",  response)\n                    })\n                    .catch(error => {\n                         console.log(error, \"eroare la accesare\");\n                    });\n          }\n     };\n\n     //this function is for check autorization and comand load data from backend\n     checkToken = token => {\n          if (!token) {\n               token = window.localStorage.getItem(\"token\");\n          }\n          // console.log(\"trigger this.checkToken(); TOKEN.....>\", token )\n          axios.post(\"http://localhost:4000/checkToken\", {\n               token: token\n          })\n               .then(response => {\n                    // console.log(\"checkToken() OK!, MY Email ->>\", response.data.myEmail )\n                    //this.sortUsers( response.data.users, response.data.myEmail )\n                    this.setState({\n                         authorized: response.data.authorized,\n                         myEmail: response.data.myEmail,\n                         loaded: true\n                    });\n\n                    this.loadData(response.data.myEmail);\n                    // console.log(\"s-a verificat tokenul, a venit raspunsul si s-a activat  this.loadData( response.data.myEmail );\", response.data.myEmail )\n               })\n               .catch(error => {\n                    console.log(error, \"DB acces error\");\n               });\n     };\n\n     componentDidMount() {\n          if (window.localStorage.getItem(\"token\") && this.state.users.length === 0) {\n               this.checkToken();\n          }\n     }\n\n     render() {\n          return (\n               <BrowserRouter>\n                    {this.state.authorized ? (\n                         <Redirect to=\"/\" />\n                    ) : this.state.autentificate ? (\n                         <Redirect to=\"/login\" />\n                    ) : (\n                         <Redirect to=\"/register\" />\n                    )}\n\n                    <Switch>\n                         <Route\n                              exact\n                              path=\"/\"\n                              render={props => (\n                                   <Messenger\n                                        loadData={this.loadData}\n                                        logout={this.logout}\n                                        display={this.display}\n                                        state={this.state}\n                                        updateData={this.updateData}\n                                        sendMessage={this.sendMessage}\n                                        sendFriendRequest={this.sendFriendRequest}\n                                        revokeFriendRequest={this.revokeFriendRequest}\n                                        deniedFriendRequest={this.deniedFriendRequest}\n                                        acceptFriendRequest={this.acceptFriendRequest}\n                                        removeFriend={this.removeFriend}\n                                        showProfile={this.showProfile}\n                                        editProfile={this.editProfile}\n                                        profileChange={this.profileChange}\n                                        scrollUP={this.scrollUP}\n                                        setColor={this.setColor}\n                                   />\n                              )}\n                         />\n\n                         <Route\n                              path=\"/login\"\n                              render={props => (\n                                   <LogIn\n                                        updateData={this.updateData}\n                                        state={this.state}\n                                        tryLogin={this.tryLogin}\n                                        changeForm={this.changeForm}\n                                   />\n                              )}\n                         />\n                         <Route\n                              path=\"/register\"\n                              render={props => (\n                                   <Register\n                                        updateData={this.updateData}\n                                        state={this.state}\n                                        tryRegister={this.tryRegister}\n                                        changeForm={this.changeForm}\n                                   />\n                              )}\n                         />\n                    </Switch>\n               </BrowserRouter>\n          );\n     }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<FrontendApp />, rootElement);\n"],"sourceRoot":""}